<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="NodeC" loc="14:NodeC.nc">
      <configuration/>
    </component>
    <component qname="MainC" loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:/home/jblock/tiny/tinyos-main//tos/lib/tossim/PlatformC.nc">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/PlatformC.nc">
        <short>&#10; The default simulation platform, which does nothing.</short>
        <long>&#10; The default simulation platform, which does nothing.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMoteP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/jblock/tiny/tinyos-main//tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/jblock/tiny/tinyos-main//tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Node" loc="39:Node.nc">
      <module/>
    </component>
    <component qname="NodeC.GeneralReceive" loc="43(NodeC.GeneralReceive):/home/jblock/tiny/tinyos-main//tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC" loc="3(NodeC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="0">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.SimpleSendP" loc="12(NodeC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.sendTimer" loc="44(NodeC.SimpleSendC.sendTimer):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/jblock/tiny/tinyos-main//tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/jblock/tiny/tinyos-main//tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x407c92a0"/>
            <typename><typedef-ref name="TMilli" ref="0x407c945c"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b5b618"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/home/jblock/tiny/tinyos-main//tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x407c92a0"/>
            <typename><typedef-ref name="TMilli" ref="0x407c945c"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x407c92a0"/>
            <typename><typedef-ref name="TMilli" ref="0x407c945c"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/jblock/tiny/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/jblock/tiny/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x407c92a0"/>
            <typename><typedef-ref name="TMilli" ref="0x407c945c"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/jblock/tiny/tinyos-main//tos/system/RandomC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/jblock/tiny/tinyos-main//tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC" loc="47(NodeC.SimpleSendC.AMSenderC):/home/jblock/tiny/tinyos-main//tos/system/AMSenderC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC" loc="47(NodeC.SimpleSendC.AMSenderC.SenderC):/home/jblock/tiny/tinyos-main//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/home/jblock/tiny/tinyos-main//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/jblock/tiny/tinyos-main//tos/system/AMQueueP.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC" loc="41(NodeC.SimpleSendC.PoolC):/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x40a509bc"/>
            <typename><typedef-ref name="sendInfo" ref="0x40a4f010"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC.PoolP" loc="53(NodeC.SimpleSendC.PoolC.PoolP):/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ced59c"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.QueueC" loc="42(NodeC.SimpleSendC.QueueC):/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x40a509bc"/>
              <typename><typedef-ref name="sendInfo" ref="0x40a4f010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC" loc="13:lib/modules/CommandHandlerC.nc">
      <documentation loc="1:lib/modules/CommandHandlerC.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CommandHandlerP" loc="13:lib/modules/CommandHandlerP.nc">
      <documentation loc="1:lib/modules/CommandHandlerP.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CommandHandlerC.CommandReceive" loc="43(CommandHandlerC.CommandReceive):/home/jblock/tiny/tinyos-main//tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC" loc="41(CommandHandlerC.PoolC):/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
            <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC.PoolP" loc="53(CommandHandlerC.PoolC.PoolP):/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ced59c"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC.QueueC" loc="42(CommandHandlerC.QueueC):/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
              <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.NeighborDiscoveryTimerC" loc="44(NodeC.NeighborDiscoveryTimerC):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.lsrTimerC" loc="44(NodeC.lsrTimerC):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.dijkstraTimerC" loc="44(NodeC.dijkstraTimerC):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.nodesVisitedC" loc="11(NodeC.nodesVisitedC):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
            <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.ListOfNeighborsC" loc="11(NodeC.ListOfNeighborsC):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
            <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.routingTableC" loc="10(NodeC.routingTableC):dataStructures/modules/HashmapC.nc">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <value cst="I:300">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.lspLinkListC" loc="11(NodeC.lspLinkListC):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="lspLink" ref="0x40a4f22c"/>
            <typename><typedef-ref name="lspLink" ref="0x40a4f8b8"/></typename>
          </type-tag>
          <value cst="I:64">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC" loc="4:lib/modules/TransportC.nc">
      <configuration/>
    </component>
    <component qname="TransportP" loc="7:lib/modules/TransportP.nc">
      <module/>
    </component>
    <component qname="RoutingTableC" loc="1:lib/modules/RoutingTableC.nc">
      <configuration/>
    </component>
    <component qname="RoutingTableP" loc="1:lib/modules/RoutingTableP.nc">
      <module/>
    </component>
    <component qname="RoutingTableC.routingTableC" loc="10(RoutingTableC.routingTableC):dataStructures/modules/HashmapC.nc">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HashmapC"/>
        <arguments>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <value cst="I:300">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SimpleSendC" loc="3(TransportC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="1">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.SimpleSendP" loc="12(TransportC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SimpleSendC.sendTimer" loc="44(TransportC.SimpleSendC.sendTimer):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.AMSenderC" loc="47(TransportC.SimpleSendC.AMSenderC):/home/jblock/tiny/tinyos-main//tos/system/AMSenderC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.AMSenderC.SenderC" loc="47(TransportC.SimpleSendC.AMSenderC.SenderC):/home/jblock/tiny/tinyos-main//tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(TransportC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/home/jblock/tiny/tinyos-main//tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SimpleSendC.PoolC" loc="41(TransportC.SimpleSendC.PoolC):/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x40a509bc"/>
            <typename><typedef-ref name="sendInfo" ref="0x40a4f010"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SimpleSendC.PoolC.PoolP" loc="53(TransportC.SimpleSendC.PoolC.PoolP):/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ced59c"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SimpleSendC.QueueC" loc="42(TransportC.SimpleSendC.QueueC):/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x40a509bc"/>
              <typename><typedef-ref name="sendInfo" ref="0x40a4f010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.ServerReadTimerC" loc="44(TransportC.ServerReadTimerC):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.ClientWriteTimerC" loc="44(TransportC.ClientWriteTimerC):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SendTimerC" loc="44(TransportC.SendTimerC):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.TimeoutTimerC" loc="44(TransportC.TimeoutTimerC):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.TimeWaitC" loc="44(TransportC.TimeWaitC):/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TransportC.SocketListC" loc="11(TransportC.SocketListC):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
            <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.SendPacketQueueC" loc="11(TransportC.SendPacketQueueC):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
            <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
          </type-tag>
          <value cst="I:100">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TransportC.RcvdPacketQueueC" loc="11(TransportC.RcvdPacketQueueC):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ListC"/>
        <arguments>
          <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
            <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
          </type-tag>
          <value cst="I:100">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b5b618" loc="23:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b5b618"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b5b7cc" loc="23:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendC" loc="3:lib/modules/SimpleSendC.nc" abstract="">
      <parameters>
        <constant name="channel" ref="0x40af7178" loc="3:lib/modules/SimpleSendC.nc">
          <component-ref qname="SimpleSendC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendP" loc="12:lib/modules/SimpleSendP.nc" abstract="">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40ced59c" loc="41:/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ced59c"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40ced7ac" loc="41:/home/jblock/tiny/tinyos-main//tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40ce8940" loc="53:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ce8940"/></type-var>
        </typedef>
        <constant name="size" ref="0x40ce8b20" loc="53:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c4258c" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c4258c"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40c42760" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40ca9cb8" loc="45:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/jblock/tiny/tinyos-main//tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40adb24c" loc="43:/home/jblock/tiny/tinyos-main//tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b1dc68" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b1dc68"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40cfdb7c" loc="42:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40cfdb7c"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40cfdd98" loc="42:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40b515ec" loc="23:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40b515ec"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40b517a0" loc="23:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/jblock/tiny/tinyos-main//tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c83b0c" loc="47:/home/jblock/tiny/tinyos-main//tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ListC" loc="11:dataStructures/modules/ListC.nc" abstract="">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40d333a0" loc="11:dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40d333a0"/></type-var>
        </typedef>
        <constant name="n" ref="0x40d33518" loc="11:dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/jblock/tiny/tinyos-main//tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40c930b0" loc="43:/home/jblock/tiny/tinyos-main//tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HashmapC" loc="10:dataStructures/modules/HashmapC.nc" abstract="">
      <documentation loc="1:dataStructures/modules/HashmapC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This moudle provides a simple hashmap.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40d475a4" loc="10:dataStructures/modules/HashmapC.nc">
          <component-ref qname="HashmapC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40d475a4"/></type-var>
        </typedef>
        <constant name="n" ref="0x40d4771c" loc="10:dataStructures/modules/HashmapC.nc">
          <component-ref qname="HashmapC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/jblock/tiny/tinyos-main//tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40c9b690" loc="47:/home/jblock/tiny/tinyos-main//tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/jblock/tiny/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c66868" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c66868"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SimpleSend" loc="3:lib/interfaces/SimpleSend.nc">
      <function command="" provided="0" name="send" ref="0x40a4b08c" loc="4:lib/interfaces/SimpleSend.nc">
        <interfacedef-ref qname="SimpleSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
              <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
            </type-tag>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a4ed0c" loc="4:lib/interfaces/SimpleSend.nc">
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
              <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
            </type-tag>
          </variable>
          <variable name="dest" ref="0x40a4eef8" loc="4:lib/interfaces/SimpleSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x408bf700" loc="113:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408bf5b0" loc="113:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x408be3fc" loc="138:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408be2ac" loc="138:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4084ec68" loc="104:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408bfbdc" loc="130:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/jblock/tiny/tinyos-main//tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Hashmap" loc="10:dataStructures/interfaces/Hashmap.nc">
      <documentation loc="1:dataStructures/interfaces/Hashmap.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This is an interface for Hashmaps.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This is an interface for Hashmaps.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40a60e80" loc="10:dataStructures/interfaces/Hashmap.nc">
          <interfacedef-ref qname="Hashmap"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a60e80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40a5c010" loc="13:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a60e80"/></type-var>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40a5de54" loc="13:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40a5c8c4" loc="15:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remove" ref="0x40a5dadc" loc="12:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40a5d98c" loc="12:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insert" ref="0x40a5d600" loc="11:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a60e80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40a5d2fc" loc="11:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
          <variable name="input" ref="0x40a5d4a8" loc="11:dataStructures/interfaces/Hashmap.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a60e80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getKeys" ref="0x40a5a06c" loc="17:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="contains" ref="0x40a5c52c" loc="14:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40a5c3dc" loc="14:dataStructures/interfaces/Hashmap.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40a5cc68" loc="16:dataStructures/interfaces/Hashmap.nc">
        <interfacedef-ref qname="Hashmap"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/jblock/tiny/tinyos-main//tos/interfaces/Boot.nc">
      <documentation loc="42:/home/jblock/tiny/tinyos-main//tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4084d334" loc="60:/home/jblock/tiny/tinyos-main//tos/interfaces/Boot.nc">
        <documentation loc="51:/home/jblock/tiny/tinyos-main//tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40aed80c" loc="50:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40aed80c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40ae8340" loc="97:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="91:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40aed80c"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40aea65c" loc="80:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="74:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40aedc64" loc="61:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="52:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40aeac24" loc="89:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="82:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40aed80c"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40aeaad4" loc="89:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40aed80c"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40aea154" loc="72:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
        <documentation loc="63:/home/jblock/tiny/tinyos-main//tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/jblock/tiny/tinyos-main//tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x407b67b0" loc="67:/home/jblock/tiny/tinyos-main//tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/jblock/tiny/tinyos-main//tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x407b6c98" loc="75:/home/jblock/tiny/tinyos-main//tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/jblock/tiny/tinyos-main//tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x40b7f9f0" loc="38:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x40b7fe88" loc="44:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x40b7f608" loc="32:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x40b7e36c" loc="50:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x40b62b80" loc="21:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b35484"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x40b356a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x40b7f160" loc="27:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b35484"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40b356a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x40b7f010" loc="27:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b35484"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40b356a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0x408cec70" loc="45:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x402db5c0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ceb20" loc="45:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
      <documentation loc="42:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x408cc1b4" loc="65:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="58:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cc064" loc="65:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x408ccb1c" loc="78:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="67:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cc9cc" loc="78:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408cb988" loc="126:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="109:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cb640" loc="126:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408cb814" loc="126:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408cb088" loc="106:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="96:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x408c9734" loc="94:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
        <documentation loc="80:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c9408" loc="94:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408c95dc" loc="94:/home/jblock/tiny/tinyos-main//tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/jblock/tiny/tinyos-main//tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b1f960" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b1f960"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40b1fdf8" loc="61:/home/jblock/tiny/tinyos-main//tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/jblock/tiny/tinyos-main//tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40af44c4" loc="43:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40af44c4"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x40af19c8" loc="80:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="74:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40af44c4"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x40aef7e8" loc="97:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="90:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40af44c4"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40aef698" loc="97:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40af44c4"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x402d863c"/>
              <value-structured>
                <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0x402d863c"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40aee08c" loc="108:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="99:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40af44c4"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40aeff28" loc="108:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0x40af4d14" loc="57:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="52:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40af15cc" loc="72:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="67:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40aef038" loc="88:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="82:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40af44c4"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40af491c" loc="50:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="45:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40af1148" loc="65:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
        <documentation loc="59:/home/jblock/tiny/tinyos-main//tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408bd708" loc="80:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x408bd1d0" loc="80:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x408bd3d4" loc="80:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408bd5a8" loc="80:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408b9184" loc="135:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408badec" loc="135:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408b9010" loc="135:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408ba8c0" loc="123:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408bc36c" loc="96:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bc21c" loc="96:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408ba010" loc="110:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bcca8" loc="110:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408bce90" loc="110:/home/jblock/tiny/tinyos-main//tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/jblock/tiny/tinyos-main//tos/interfaces/Read.nc">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x409b453c" loc="49:/home/jblock/tiny/tinyos-main//tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x409b453c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x409b49a8" loc="55:/home/jblock/tiny/tinyos-main//tos/interfaces/Read.nc">
        <documentation loc="50:/home/jblock/tiny/tinyos-main//tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x409cd168" loc="63:/home/jblock/tiny/tinyos-main//tos/interfaces/Read.nc">
        <documentation loc="57:/home/jblock/tiny/tinyos-main//tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x409b453c"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x409b4df8" loc="63:/home/jblock/tiny/tinyos-main//tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x409cd010" loc="63:/home/jblock/tiny/tinyos-main//tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x409b453c"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/jblock/tiny/tinyos-main//tos/interfaces/Random.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40a58480" loc="52:/home/jblock/tiny/tinyos-main//tos/interfaces/Random.nc">
        <documentation loc="48:/home/jblock/tiny/tinyos-main//tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40a58010" loc="46:/home/jblock/tiny/tinyos-main//tos/interfaces/Random.nc">
        <documentation loc="42:/home/jblock/tiny/tinyos-main//tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x40b67ea8" loc="45:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b37244"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40b37460"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x40b6338c" loc="53:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3119c"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b313b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x40b6492c" loc="49:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b34b08"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40b34d24"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40b64ef8" loc="50:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b34b08"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40b34d24"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40b64da8" loc="50:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b34b08"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40b34d24"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x40b63954" loc="54:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3119c"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b313b8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b63804" loc="54:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3119c"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b313b8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x40b644a8" loc="46:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b37244"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40b37460"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40b64358" loc="46:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b37244"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40b37460"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40c8f4a4" loc="75:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="57:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c8f178" loc="75:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c8f34c" loc="75:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40cb405c" loc="125:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="115:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c8dcf0" loc="125:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c8dec4" loc="125:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40c8d7c4" loc="112:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="102:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c8e160" loc="89:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="77:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c8e010" loc="89:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40c8ed80" loc="100:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
        <documentation loc="91:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c8ea40" loc="100:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40c8ec28" loc="100:/home/jblock/tiny/tinyos-main//tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/jblock/tiny/tinyos-main//tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40c812ac" loc="53:/home/jblock/tiny/tinyos-main//tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40c812ac"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40c818ac" loc="64:/home/jblock/tiny/tinyos-main//tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/jblock/tiny/tinyos-main//tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40c812ac"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40c8175c" loc="64:/home/jblock/tiny/tinyos-main//tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40c812ac"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40a3d4c8" loc="50:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40a3dcc8" loc="60:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40a3d900" loc="55:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40795860"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40a3d010" loc="45:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40795860"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40968c20" loc="45:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40795860"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40968e14" loc="45:/home/jblock/tiny/tinyos-main//tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b3d3ac" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b3d3ac"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40b3d508" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b3d508"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40b5e698" loc="109:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b3d508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40b5f438" loc="78:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40b5e08c" loc="103:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b3d508"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b3d508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40b5fd40" loc="103:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b3d508"/></type-var>
          </variable>
          <variable name="dt" ref="0x40b5ff20" loc="103:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b3d508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40b5f868" loc="88:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40b5eae8" loc="116:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b3d508"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b3dae8" loc="66:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b3d508"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40b3d998" loc="66:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b3d508"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b5f010" loc="73:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/jblock/tiny/tinyos-main//tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/jblock/tiny/tinyos-main//tos/interfaces/Init.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4084de34" loc="62:/home/jblock/tiny/tinyos-main//tos/interfaces/Init.nc">
        <documentation loc="53:/home/jblock/tiny/tinyos-main//tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40b6674c" loc="41:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b6674c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x40b834d8" loc="74:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40b61564" loc="58:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b66bfc" loc="48:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b6674c"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b61930" loc="62:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40b838fc" loc="80:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b61160" loc="54:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b6674c"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b61010" loc="54:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b6674c"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b61d00" loc="65:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b830ec" loc="68:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Transport" loc="19:lib/interfaces/Transport.nc">
      <documentation loc="5:lib/interfaces/Transport.nc">
        <short>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP.</short>
        <long>&#10; The Transport interface handles sockets and is a layer of abstraction&#10; above TCP. This will be used by the application layer to set up TCP&#10; packets. Internally the system will be handling syn/ack/data/fin&#10; Transport packets.&#10;&#10; @project&#10;   Transmission Control Protocol&#10; @author&#10;      Alex Beltran - abeltran2@ucmerced.edu&#10; @date&#10;   2013/11/12&#10;</long>
      </documentation>
      <function command="" provided="0" name="listen" ref="0x40a7bad4" loc="147:lib/interfaces/Transport.nc">
        <documentation loc="138:lib/interfaces/Transport.nc">
          <short>&#10; Listen to the socket and wait for a connection.</short>
          <long>&#10; Listen to the socket and wait for a connection.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are hard closing. &#10; @side Server&#10; @return error_t - returns SUCCESS if you are able change the state &#10;   to listen else FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_fd_t" ref="0x40a84384"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40a7b984" loc="147:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_fd_t" ref="0x40a84384"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40a7d238" loc="83:lib/interfaces/Transport.nc">
        <documentation loc="75:lib/interfaces/Transport.nc">
          <short>&#10; This will pass the packet so you can handle it internally.</short>
          <long>&#10; This will pass the packet so you can handle it internally. &#10; @param&#10;    pack *package: the TCP packet that you are handling.&#10; @Side Client/Server &#10; @return uint16_t - return SUCCESS if you are able to handle this&#10;    packet or FAIL if there are errors.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
                <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="package" ref="0x40a7d0e8" loc="83:lib/interfaces/Transport.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
                <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makePack" ref="0x40a78784" loc="153:lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
                <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="Package" ref="0x40a79774" loc="153:lib/interfaces/Transport.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
                <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="src" ref="0x40a79954" loc="153:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
          <variable name="dest" ref="0x40a79b40" loc="153:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
          <variable name="TTL" ref="0x40a79d20" loc="153:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
          <variable name="Protocol" ref="0x40a78010" loc="153:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
          <variable name="seq" ref="0x40a781f0" loc="153:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x40a78408" loc="153:lib/interfaces/Transport.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40a785fc" loc="153:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="release" ref="0x40a7b428" loc="136:lib/interfaces/Transport.nc">
        <documentation loc="127:lib/interfaces/Transport.nc">
          <short>&#10; A hard close, which is not graceful.</short>
          <long>&#10; A hard close, which is not graceful. This portion is optional.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are hard closing. &#10; @side Client/Server&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a closure with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_fd_t" ref="0x40a84384"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40a7b2d8" loc="136:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_fd_t" ref="0x40a84384"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40a7dcb0" loc="100:lib/interfaces/Transport.nc">
        <documentation loc="85:lib/interfaces/Transport.nc">
          <short>&#10; Read from the socket and write this data to the buffer.</short>
          <long>&#10; Read from the socket and write this data to the buffer. This data&#10; is obtained from your TCP implimentation.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting a read.&#10; @param&#10;    uint8_t *buff: the buffer that is being written.&#10; @param&#10;    uint16_t bufflen: the amount of data that can be written to the&#10;       buffer.&#10; @Side For your project, only server side. This could be both though.&#10; @return uint16_t - return the amount of data you are able to read&#10;    from the pass buffer. This may be shorter then bufflen&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40a7d74c" loc="100:lib/interfaces/Transport.nc">
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
          </variable>
          <variable name="buff" ref="0x40a7d948" loc="100:lib/interfaces/Transport.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x40a7db50" loc="100:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x40a8079c" loc="42:lib/interfaces/Transport.nc">
        <documentation loc="30:lib/interfaces/Transport.nc">
          <short>&#10; Bind a socket with an address.</short>
          <long>&#10; Bind a socket with an address.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       you are binding.&#10; @param&#10;    socket_addr_t *addr: the source port and source address that&#10;       you are biding to the socket, fd.&#10; @Side Client/Server&#10; @return error_t - SUCCESS if you were able to bind this socket, FAIL&#10;       if you were unable to bind.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_fd_t" ref="0x40a84384"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x40a85bac"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x40a84124"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40a8040c" loc="42:lib/interfaces/Transport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="socket_fd_t" ref="0x40a84384"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40a80644" loc="42:lib/interfaces/Transport.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x40a85bac"/>
                <typename><typedef-ref name="socket_addr_t" ref="0x40a84124"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setTestClient" ref="0x40a793b8" loc="151:lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="socket" ref="0x40a81e60" loc="28:lib/interfaces/Transport.nc">
        <documentation loc="20:lib/interfaces/Transport.nc">
          <short>&#10; Get a socket if there is one available.</short>
          <long>&#10; Get a socket if there is one available.&#10; @Side Client/Server&#10; @return&#10;    socket_t - return a socket file descriptor which is a number&#10;    associated with a socket. If you are unable to allocated&#10;    a socket then return a NULL socket_t.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="socket_fd_t" ref="0x40a84384"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="connect" ref="0x40a7c6a4" loc="114:lib/interfaces/Transport.nc">
        <documentation loc="102:lib/interfaces/Transport.nc">
          <short>&#10; Attempts a connection to an address.</short>
          <long>&#10; Attempts a connection to an address.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are attempting a connection with. &#10; @param&#10;    socket_addr_t *addr: the destination address and port where&#10;       you will atempt a connection.&#10; @side Client&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a connection with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40a7c554" loc="114:lib/interfaces/Transport.nc">
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setTestServer" ref="0x40a79010" loc="149:lib/interfaces/Transport.nc">
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="accept" ref="0x40a80e70" loc="56:lib/interfaces/Transport.nc">
        <documentation loc="44:lib/interfaces/Transport.nc">
          <short>&#10; Checks to see if there are socket connections to connect to and&#10; if there is one, connect to it.</short>
          <long>&#10; Checks to see if there are socket connections to connect to and&#10; if there is one, connect to it.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting an accept. remember, only do on listen. &#10; @side Server&#10; @return socket_t - returns a new socket if the connection is&#10;    accepted. this socket is a copy of the server socket but with&#10;    a destination associated with the destination address and port.&#10;    if not return a null socket.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
            <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
          </type-tag>
          <function-parameters>
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40a80d20" loc="56:lib/interfaces/Transport.nc">
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40a7ea5c" loc="73:lib/interfaces/Transport.nc">
        <documentation loc="58:lib/interfaces/Transport.nc">
          <short>&#10; Write to the socket from a buffer.</short>
          <long>&#10; Write to the socket from a buffer. This data will eventually be&#10; transmitted through your TCP implimentation.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that is attempting a write.&#10; @param&#10;    uint8_t *buff: the buffer data that you are going to wrte from.&#10; @param&#10;    uint16_t bufflen: The amount of data that you are trying to&#10;       submit.&#10; @Side For your project, only client side. This could be both though.&#10; @return uint16_t - return the amount of data you are able to write&#10;    from the pass buffer. This may be shorter then bufflen&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40a7e4f8" loc="73:lib/interfaces/Transport.nc">
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
          </variable>
          <variable name="buff" ref="0x40a7e6f4" loc="73:lib/interfaces/Transport.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="bufflen" ref="0x40a7e8fc" loc="73:lib/interfaces/Transport.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x40a7cd84" loc="125:lib/interfaces/Transport.nc">
        <documentation loc="116:lib/interfaces/Transport.nc">
          <short>&#10; Closes the socket.</short>
          <long>&#10; Closes the socket.&#10; @param&#10;    socket_t fd: file descriptor that is associated with the socket&#10;       that you are closing. &#10; @side Client/Server&#10; @return socket_t - returns SUCCESS if you are able to attempt&#10;    a closure with the fd passed, else return FAIL.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Transport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="fd" ref="0x40a7cc34" loc="125:lib/interfaces/Transport.nc">
            <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
              <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="List" loc="11:dataStructures/interfaces/List.nc">
      <documentation loc="1:dataStructures/interfaces/List.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40a4db38" loc="11:dataStructures/interfaces/List.nc">
          <interfacedef-ref qname="List"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="size" ref="0x40a64bc4" loc="24:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="front" ref="0x40a6412c" loc="21:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40a64820" loc="23:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a62160" loc="25:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0x40a62010" loc="25:dataStructures/interfaces/List.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pushback" ref="0x40a65160" loc="17:dataStructures/interfaces/List.nc">
        <documentation loc="12:dataStructures/interfaces/List.nc">
          <short>&#10; Put value into the end of the list.</short>
          <long>&#10; Put value into the end of the list.&#10;&#10; @param input - data to be inserted&#10;</long>
        </documentation>
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x40a65010" loc="17:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="popfront" ref="0x40a65d94" loc="20:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="popback" ref="0x40a65a10" loc="19:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pushfront" ref="0x40a65698" loc="18:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0x40a65548" loc="18:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="back" ref="0x40a64488" loc="22:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40a4db38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/jblock/tiny/tinyos-main//tos/interfaces/Receive.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x408c1f18" loc="78:/home/jblock/tiny/tinyos-main//tos/interfaces/Receive.nc">
        <documentation loc="58:/home/jblock/tiny/tinyos-main//tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
              <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c19f8" loc="78:/home/jblock/tiny/tinyos-main//tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x408c1bc8" loc="78:/home/jblock/tiny/tinyos-main//tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408c1d9c" loc="78:/home/jblock/tiny/tinyos-main//tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RoutingTable" loc="1:lib/interfaces/RoutingTable.nc">
      <function command="" provided="0" name="get" ref="0x40a66400" loc="4:lib/interfaces/RoutingTable.nc">
        <interfacedef-ref qname="RoutingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="i" ref="0x40a662b0" loc="4:lib/interfaces/RoutingTable.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="update" ref="0x40a69eec" loc="2:lib/interfaces/RoutingTable.nc">
        <interfacedef-ref qname="RoutingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="i" ref="0x40a69b8c" loc="2:lib/interfaces/RoutingTable.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
          <variable name="nextHop" ref="0x40a69d94" loc="2:lib/interfaces/RoutingTable.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0x40891010" loc="44:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0x4087ce08" loc="44:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0x40890094" loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0x401253cc"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0x40891b70" loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0x40891d34" loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40891f1c" loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0x401253cc"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0x40890780" loc="49:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x408903f8" loc="48:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0x4087ca68" loc="43:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRadioChannel" ref="0x40890d68" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newRadioChannel" ref="0x40890c18" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4089179c" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRadioChannel" ref="0x4088e1b0" loc="52:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0x40891404" loc="45:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b5a3c0" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b5a3c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40b5a51c" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b5a51c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40b5a9bc" loc="64:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40b5a51c"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40b593a0" loc="76:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40b5aea4" loc="71:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40b5976c" loc="82:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/jblock/tiny/tinyos-main//tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x408d4330" loc="59:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d41e0" loc="59:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x408d4dc4" loc="71:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d4c74" loc="71:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x408d38ec" loc="85:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d379c" loc="85:/home/jblock/tiny/tinyos-main//tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0x40923010" loc="48:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x405d8830"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x409264a8" loc="48:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x409266bc" loc="49:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40926884" loc="50:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0x40926ab0" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0x405d8830"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0x40926c58" loc="52:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0x40926e44" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x409216d8" loc="60:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40921588" loc="60:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0x409238bc" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0x40923cc0" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0x409234f0" loc="55:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x409233a0" loc="55:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0x409211d0" loc="59:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40921080" loc="59:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x40921c20" loc="61:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40921ad0" loc="61:/home/jblock/tiny/tinyos-main//tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408e7d10" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x408e77d8" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0x408e79dc" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408e7bb0" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x408e33d4" loc="85:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e3284" loc="85:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408e448c" loc="69:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e433c" loc="69:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408e4d80" loc="76:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e4a40" loc="76:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408e4c28" loc="76:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0x408e39dc" loc="87:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408e388c" loc="87:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40b6c3e4" loc="55:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b6c3e4"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40b699b4" loc="98:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40b69194" loc="87:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b6c890" loc="61:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b6c3e4"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40b69f08" loc="104:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40b69db8" loc="104:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x40b68378" loc="110:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b6b5d8" loc="75:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40b6b1f0" loc="70:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40b695c0" loc="93:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b6cdcc" loc="67:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b6c3e4"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40b6cc7c" loc="67:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40b6c3e4"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b6b9a8" loc="78:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b6bd68" loc="81:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x408d86cc" loc="177:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40795860"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408d857c" loc="177:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x408c52d4" loc="88:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408c5184" loc="88:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x408c82b0" loc="68:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408c8904" loc="78:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408c87b4" loc="78:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408c4b5c" loc="121:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408c4810" loc="121:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408c4a04" loc="121:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x408c5e44" loc="103:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408c5af8" loc="103:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408c5cec" loc="103:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x408c3180" loc="147:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408c3030" loc="147:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x408c3c40" loc="162:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408c3928" loc="162:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x408c3ae8" loc="162:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408c26a4" loc="136:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408c2554" loc="136:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x408d935c" loc="187:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40795860"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408d9010" loc="187:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
                <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x408d9204" loc="187:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40795860"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x408d9b7c" loc="195:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/jblock/tiny/tinyos-main//tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40795860"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/jblock/tiny/tinyos-main//tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/jblock/tiny/tinyos-main//tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40595088" loc="57:/home/jblock/tiny/tinyos-main//tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/jblock/tiny/tinyos-main//tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40595930" loc="72:/home/jblock/tiny/tinyos-main//tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/jblock/tiny/tinyos-main//tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40595498" loc="65:/home/jblock/tiny/tinyos-main//tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/jblock/tiny/tinyos-main//tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommandHandler" loc="1:lib/interfaces/CommandHandler.nc">
      <function event="" provided="0" name="printLinkState" ref="0x40a499f0" loc="6:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printNeighbors" ref="0x40a49280" loc="4:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printDistanceVector" ref="0x40a49dd4" loc="7:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestClient" ref="0x40a4753c" loc="9:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestServer" ref="0x40a47194" loc="8:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppServer" ref="0x40a478dc" loc="10:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printRouteTable" ref="0x40a4963c" loc="5:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="ping" ref="0x40a4be50" loc="3:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destination" ref="0x40a4bae0" loc="3:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0x40a4bcf8" loc="3:lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppClient" ref="0x40a47c7c" loc="11:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a59c8c" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a59c8c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40a70230" loc="136:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40a72194" loc="83:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40a71264" loc="114:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40a72ef0" loc="114:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40a7110c" loc="114:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40a72a78" loc="98:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40a70b34" loc="151:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40a7063c" loc="144:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40a725ec" loc="92:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40a742b8" loc="64:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a74168" loc="64:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40a71c08" loc="129:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40a718d8" loc="129:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40a71ab0" loc="129:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40a74918" loc="73:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40a747c8" loc="73:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40a74db4" loc="78:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <struct name="__pthread_mutex_s" loc="92:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40425118" defined="" size="I:24" alignment="I:4">
      <field name="__lock" ref="0x40425f74" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0x40424010" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0x40424070" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0x404240d0" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0x40424130" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="d" ref="0x40424190" bit-offset="I:160" size="I:4">
        <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x404258c4"/></type-tag>
      </field>
      <field name="__list" ref="0x404241f0" bit-offset="I:160" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x404269bc"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0x40426e4c"/></typename>
        </type-tag>
      </field>
    </struct>
    <attribute name="bnd" loc="9:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x40127010" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0x40127254" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x401272b4" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <nx_struct name="socket_addr_t" loc="34:lib/interfaces/../../includes/socket.h" ref="0x40a85bac" defined="" size="I:3" alignment="I:1">
      <field name="port" ref="0x40a84010" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_socket_port_t" ref="0x40a85740"/></typename>
        </type-int>
      </field>
      <field name="addr" ref="0x40a84070" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="297:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b420d4" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b421dc" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b4223c" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b44b78"/></type-tag>
      </field>
    </union>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0x406fadec" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0x406f9218" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0x40419f10"/></type-tag>
      </field>
      <field name="it_value" ref="0x406f9278" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0x40419f10"/></type-tag>
      </field>
    </struct>
    <union loc="133:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b34b08" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b34c10" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b34c70" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b345c8"/></type-tag>
      </field>
    </union>
    <struct loc="21:/usr/include/_G_config.h" ref="0x40578960" defined="" size="I:12" alignment="I:4">
      <field name="__pos" ref="0x40578a68" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0x403f4010"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x40578ac8" bit-offset="I:32" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x405782f0"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x4057850c"/></typename>
        </type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="24:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimRadioMsg.h" ref="0x40793c34" defined="" size="I:7" alignment="I:1">
      <field name="strength" ref="0x40791c74" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x403bd73c"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x40791cd4" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0x40791d34" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0x40791d94" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x40791df4" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0x40791e54" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="280:/usr/include/inttypes.h" ref="0x402e4da4" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0x402e4eac" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x402e4f0c" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="138:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x40853c78" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="cc2420_metadata_t" loc="94:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x408568d8" defined="" size="I:12" alignment="I:1">
      <field name="rssi" ref="0x4086d4c8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x4086d528" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0x4086d588" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0x4086d5e8" bit-offset="I:24" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x403bd73c"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x4086d648" bit-offset="I:32" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x403bd73c"/></typename>
        </type-int>
      </field>
      <field name="timesync" ref="0x4086d6a8" bit-offset="I:40" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0x403bd73c"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0x4086d708" bit-offset="I:48" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x403be17c"/></typename>
        </type-int>
      </field>
      <field name="rxInterval" ref="0x4086d768" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="138:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x404272e8" defined="" size="I:48" alignment="I:4">
      <field name="__data" ref="0x404273f0" bit-offset="I:0" size="I:44">
        <type-tag size="I:44" alignment="I:4"><struct-ref ref="0x40428ac4"/></type-tag>
      </field>
      <field name="__size" ref="0x40427450" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x404274b0" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct name="gain_entry" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_gain.h" ref="0x406c037c" defined="" size="I:16" alignment="I:4">
      <field name="mote" ref="0x406c0810" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0x406c0870" bit-offset="I:32" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0x406c08d0" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0x406c037c"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_gain_noise" loc="3:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_gain.c" ref="0x406ba4b4" defined="" size="I:16" alignment="I:4">
      <field name="mean" ref="0x406ba800" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0x406ba860" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <enum loc="58:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x40844e14" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="deputy_scope"  loc="NONE" ref="0x40122bd4" size="V:" alignment="V:">
    </attribute>
    <struct name="timeval" loc="30:/usr/include/i386-linux-gnu/bits/time.h" ref="0x4041d514" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0x4041d8bc" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0x403f9478"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0x4041d91c" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__suseconds_t" ref="0x403f9918"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="50:/usr/include/i386-linux-gnu/bits/waitflags.h" ref="0x403f06d8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nonnull" loc="8:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x40125a40" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x40125c84" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <nx_struct name="CommandMsg" loc="16:includes/CommandMsg.h" ref="0x407d7688" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0x407d7d1c" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
      <field name="id" ref="0x407d7d7c" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x407d7ddc" bit-offset="I:24" size="I:25">
        <type-array elements="I:25" size="I:25" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum name="cc2420_secctrl0_enums" loc="326:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40884130" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_secctrl1_enums" loc="336:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40883630" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="150:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3119c" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b312a4" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b31304" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b32c10"/></type-tag>
      </field>
    </union>
    <attribute name="number"  loc="NONE" ref="0x4011fc90" size="V:" alignment="V:">
    </attribute>
    <enum name="cc2420_txctrl_enums" loc="284:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40872b34" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="250:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b49358" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b49460" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b494c0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b4af34"/></type-tag>
      </field>
    </union>
    <struct name="node" loc="62:/home/jblock/tiny/tinyos-main//tos/lib/tossim/heap.c" ref="0x40631554" defined="" size="I:12" alignment="I:4">
      <field name="data" ref="0x4063187c" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0x406318dc" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_rssi_enums" loc="275:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4087203c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="211:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b2d8d4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="43:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.h" ref="0x407c96c0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x407c97c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <nx_struct name="security_header_t" loc="52:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x408583d0" defined="" size="I:6" alignment="I:1">
      <field name="secLevel" ref="0x40858e1c" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="keyMode" ref="0x40858e7c" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x40858edc" bit-offset="I:5" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="frameCounter" ref="0x40858f3c" bit-offset="I:8" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0x403be17c"/></typename>
        </type-int>
      </field>
      <field name="keyID" ref="0x40858f9c" bit-offset="I:40" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="serial_packet" loc="131:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h" ref="0x407a031c" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0x407a0788" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x407a16bc"/>
          <typename><typedef-ref name="serial_header_t" ref="0x407a0124"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x407a07e8" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="189:/usr/include/math.h" ref="0x4055c7bc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="132:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x4085366c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="integer"  loc="NONE" ref="0x4011fb34" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/home/jblock/tiny/tinyos-main//tos/lib/tossim/tos.h" ref="0x405ebddc" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/home/jblock/tiny/tinyos-main//tos/lib/tossim/platform_message.h" ref="0x4079e8a0" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0x4079ebcc" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x40793688"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0x40793a28"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="301:/usr/include/math.h" ref="0x4055b404" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="144:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x408522b0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="23:includes/command.h" ref="0x40a5024c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="84:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0x403fd5ec" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0x403fd6f4" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0x403fd754" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="message_metadata" loc="59:/home/jblock/tiny/tinyos-main//tos/lib/tossim/platform_message.h" ref="0x4079ee98" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0x4079d208" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x40793c34"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0x40791f08"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0x40122854" size="V:" alignment="V:">
      <field name="fn" ref="0x4012295c" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="drand48_data" loc="412:/usr/include/stdlib.h" ref="0x4043ef60" defined="" size="I:24" alignment="I:4">
      <field name="__x" ref="0x4043c6e0" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0x4043c740" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0x4043c7a0" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0x4043c800" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0x4043c860" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_nonce_enums" loc="239:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40877a44" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__locale_struct" loc="27:/usr/include/xlocale.h" ref="0x403d2190" defined="" size="I:116" alignment="I:4">
      <field name="__locales" ref="0x403d2ca8" bit-offset="I:0" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0x403d2320"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0x403d2d08" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0x403d2d68" bit-offset="I:448" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0x403d2dc8" bit-offset="I:480" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0x403d2e28" bit-offset="I:512" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <struct name="lqi_dist" loc="4:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h" ref="0x409694a8" defined="" size="I:12" alignment="I:4">
      <field name="lqi" ref="0x409697e0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="cdf" ref="0x40969840" bit-offset="I:32" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h" ref="0x407a16bc" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0x407a1e9c" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x407953f0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x407a1efc" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x407953f0"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0x407a1f5c" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x407a0010" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x4079516c"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x407a0070" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x40796d80"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="136:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b345c8" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0x40b346d0" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0x40b34730" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0x40b34790" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0x40b347f0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0x40b34850" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0x40b348b0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0x40b34910" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0x40b34970" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <union name="message_header" loc="50:/home/jblock/tiny/tinyos-main//tos/lib/tossim/platform_message.h" ref="0x4079e0ec" defined="" size="I:11" alignment="I:1">
      <field name="tossim" ref="0x4079e588" bit-offset="I:0" size="I:11">
        <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x40794564"/>
          <typename><typedef-ref name="tossim_header_t" ref="0x40793464"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0x4079e5e8" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x407a16bc"/>
          <typename><typedef-ref name="serial_header_t" ref="0x407a0124"/></typename>
        </type-tag>
      </field>
    </union>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0x40419f10" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0x4041d330" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0x403f9478"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0x4041d390" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__syscall_slong_t" ref="0x403fcaa8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x40127c1c" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x40127db8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_manfidh_enums" loc="367:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x408807dc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="111:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40425cb8" defined="" size="I:4" alignment="I:4">
      <field name="d" ref="0x40425dc0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x404258c4"/></type-tag>
      </field>
      <field name="__list" ref="0x40425e20" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x404269bc"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0x40426e4c"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="bnd_nok" loc="10:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x40127620" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0x40127864" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0x401278c4" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <struct loc="105:/usr/include/stdlib.h" ref="0x40402a40" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x40402b48" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x40402ba8" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union loc="155:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x404279d8" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x40427ae0" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40427b40" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <nx_struct name="cc2420_packet_t" loc="111:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4086db44" defined="" size="I:12" alignment="I:1">
      <field name="packet" ref="0x4086c010" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x4085728c"/>
          <typename><typedef-ref name="cc2420_header_t" ref="0x40856244"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0x4086c070" bit-offset="I:96" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum loc="51:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x40844828" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timezone" loc="55:/usr/include/i386-linux-gnu/sys/time.h" ref="0x40663010" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0x40663350" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0x406633b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="wait" loc="66:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0x403fe568" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0x403fd8f0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0x403fd950" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x403fedc8"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0x403fd9b0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x403fd5ec"/></type-tag>
      </field>
    </union>
    <struct loc="64:/usr/include/i386-linux-gnu/sys/select.h" ref="0x4041b45c" defined="" size="I:128" alignment="I:4">
      <field name="__fds_bits" ref="0x4041b564" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="long" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__fd_mask" ref="0x4041dd4c"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <struct name="sim_event" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_event_queue.h" ref="0x405df3e4" defined="" size="I:28" alignment="I:4">
      <field name="time" ref="0x405de5f4" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x405d8830"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0x405de654" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="force" ref="0x405de6b4" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0x405de714" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0x405de774" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0x405de7d4" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x405df3e4"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x405df63c"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0x405de844" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x405df3e4"/>
                  <typename><typedef-ref name="sim_event_t" ref="0x405df63c"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <struct name="_IO_jump_t" ref="0x40577760" size="V:" alignment="V:">
    </struct>
    <union loc="120:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b35484" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b3558c" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b355ec" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b35078"/></type-tag>
      </field>
    </union>
    <struct ref="0x40119f04" size="V:" alignment="V:">
    </struct>
    <nx_struct name="tossim_footer" loc="20:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimRadioMsg.h" ref="0x40793688" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0x40793974" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x403c30b0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="180:/usr/include/libio.h" ref="0x40581334" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_packet.h" ref="0x4078ce30" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum name="cc2420_iocfg0_enums" loc="347:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40882698" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_rsctrl_enums" loc="317:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40885010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="69:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0x403fedc8" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0x403feed0" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0x403fef30" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0x403fef90" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="185:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b30804" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="63:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3c3dc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__pthread_internal_slist" loc="81:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x404269bc" defined="" size="I:4" alignment="I:4">
      <field name="__next" ref="0x40426d98" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x404269bc"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="167:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b30490" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b30598" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b305f8" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b30010"/></type-tag>
      </field>
    </union>
    <enum loc="82:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3a190" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="170:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b30010" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0x40b30118" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0x40b30178" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0x40b301d8" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0x40b30238" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b30298" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0x40b302f8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="136:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h" ref="0x407a0b18" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0x407a0dfc" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="91:/usr/include/i386-linux-gnu/sys/time.h" ref="0x40670650" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="97:/home/jblock/tiny/tinyos-main//tos/lib/tossim/tos.h" ref="0x405eb9f4" defined="" size="I:0" alignment="I:1">
    </attribute>
    <nx_struct name="lspLink" loc="29:Node.nc" ref="0x40a4f22c" defined="" size="I:6" alignment="I:1">
      <field name="src" ref="0x40a4f744" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
      <field name="cost" ref="0x40a4f7a4" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
      <field name="neighbor" ref="0x40a4f804" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="230:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x4042fab0" defined="" size="I:20" alignment="I:4">
      <field name="__size" ref="0x4042fbb8" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4042fc18" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="150:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x40851278" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0x40851380" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0x408513e0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0x40851440" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0x408514a0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0x40851500" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0x40851560" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h" ref="0x4066b920" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="25:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h" ref="0x407e308c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="12:includes/packet.h" ref="0x407ea768" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_status_enums" loc="164:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40869768" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="hwevent"  loc="NONE" ref="0x40122434" size="V:" alignment="V:">
    </attribute>
    <struct loc="26:/usr/include/_G_config.h" ref="0x40577010" defined="" size="I:16" alignment="I:4">
      <field name="__pos" ref="0x40577118" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x403f4274"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0x40577178" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x405782f0"/>
          <typename><typedef-ref name="__mbstate_t" ref="0x4057850c"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum name="cc2420_ram_addr_enums" loc="225:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40879db4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_battmon_enums" loc="341:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40883d00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_FILE" loc="245:/usr/include/libio.h" ref="0x4057a428" defined="" size="I:148" alignment="I:4">
      <field name="_flags" ref="0x4057e450" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0x4057e4b0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0x4057e510" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0x4057e570" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0x4057e5d0" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0x4057e630" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0x4057e690" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0x4057e6f0" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0x4057e750" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0x4057e7b0" bit-offset="I:288" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0x4057e810" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0x4057e870" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0x4057e8d0" bit-offset="I:384" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0x40577bc4"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0x4057e9b0" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0x4057ea10" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0x4057ea70" bit-offset="I:480" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0x4057ead0" bit-offset="I:512" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0x403f4010"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0x4057eb30" bit-offset="I:544" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0x4057eb90" bit-offset="I:560" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0x4057ebf0" bit-offset="I:568" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0x4057ec50" bit-offset="I:576" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0x405779f4"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0x4057ecb0" bit-offset="I:608" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0x403f4274"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0x4057ed10" bit-offset="I:672" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0x4057ed70" bit-offset="I:704" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0x4057edd0" bit-offset="I:736" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0x4057ef30" bit-offset="I:768" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0x4057ef90" bit-offset="I:800" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0x401253cc"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0x40588010" bit-offset="I:832" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0x40588070" bit-offset="I:864" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="pthread_attr_t" loc="63:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x404260fc" defined="" size="I:36" alignment="I:4">
      <field name="__size" ref="0x40426478" bit-offset="I:0" size="I:36">
        <type-array elements="I:36" size="I:36" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x404264d8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="hashtable" ref="0x405e90e8" size="V:" alignment="V:">
    </struct>
    <union loc="236:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x4042d18c" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x4042d294" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4042d2f4" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="heap" loc="61:/home/jblock/tiny/tinyos-main//tos/lib/tossim/heap.h" ref="0x406270e4" defined="" size="I:12" alignment="I:4">
      <field name="size" ref="0x406274f4" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0x40627554" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0x406275b4" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum name="cc2420_syncword_enums" loc="280:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x408726d0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="9:includes/protocol.h" ref="0x407c9e44" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="safe"  loc="NONE" ref="0x40122d30" size="V:" alignment="V:">
    </attribute>
    <enum loc="76:/home/jblock/tiny/tinyos-main//tos/lib/tossim/tos.h" ref="0x405d8010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="pack" loc="19:includes/packet.h" ref="0x407e91b0" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0x407e9b8c" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x407e9bec" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x407e9c4c" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
      <field name="TTL" ref="0x407e9cac" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="protocol" ref="0x407e9d0c" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x407e9d6c" bit-offset="I:64" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="_IO_marker" loc="160:/usr/include/libio.h" ref="0x40577bc4" defined="" size="I:12" alignment="I:4">
      <field name="_next" ref="0x405810d4" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0x40577bc4"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0x40581134" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0x40581194" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="8:includes/sendInfo.h" ref="0x40a505f4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sendInfo" loc="12:includes/sendInfo.h" ref="0x40a509bc" defined="" size="I:32" alignment="I:2">
      <field name="packet" ref="0x40a50e50" bit-offset="I:0" size="I:28">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
          <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
        </type-tag>
      </field>
      <field name="src" ref="0x40a50eb0" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x40a50f10" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="15:lib/modules/../../includes/TCPPacket.h" ref="0x40d779dc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="random_data" loc="343:/usr/include/stdlib.h" ref="0x40430430" defined="" size="I:28" alignment="I:4">
      <field name="fptr" ref="0x40430cd8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x402dba1c"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0x40430d38" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x402dba1c"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0x40430d98" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x402dba1c"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0x40430df8" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0x40430e58" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0x40430eb8" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0x40430f18" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0x402dba1c"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="22:includes/CommandMsg.h" ref="0x407d6010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="193:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b2eea4" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b2d010" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b2d070" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b2ea80"/></type-tag>
      </field>
    </union>
    <union loc="129:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40424cec" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0x40424df4" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x40424e54" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0x406fbd40" defined="" size="I:44" alignment="I:4">
      <field name="tm_sec" ref="0x406fa8a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0x406fa908" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0x406fa968" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0x406fa9c8" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0x406faa28" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0x406faa88" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0x406faae8" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0x406fab48" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0x406faba8" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0x406fac08" bit-offset="I:288" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_zone" ref="0x406fac68" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c" ref="0x405f1a78" defined="" size="I:8" alignment="I:4">
      <field name="num" ref="0x405f1e1c" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0x405f1e7c" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/>
              <typename><typedef-ref name="FILE" ref="0x4057a654"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <struct loc="315:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b41068" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0x40b41170" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0x40b411d0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0x40b41230" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0x40b41290" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0x40b412f0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0x40b41350" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b413b0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="401:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4087c03c" defined="" size="I:4" alignment="I:4">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="94:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x40855010" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0x40855118" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0x40855178" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0x408551d8" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <struct loc="42:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.h" ref="0x407c92a0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x407c93a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="12:lib/interfaces/../../includes/socket.h" ref="0x40a66b64" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="153:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b32c10" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0x40b32d18" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0x40b32d78" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0x40b32dd8" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0x40b32e38" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0x40b32e98" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0x40b32ef8" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0x40b32f58" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0x40b31010" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="126:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h" ref="0x40847dbc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="109:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h" ref="0x4078ff50" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0x407a1050" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0x407a10b0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0x407a1110" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0x407a1170" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0x407a11d0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0x407a1230" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0x407a1290" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0x407a12f0" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0x407a1350" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0x407a13b0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0x407a1410" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="dmemset" loc="15:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x402da0b4" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x402da324" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x402da384" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x402da3e4" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="one_nok" loc="14:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x402d8b6c" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x402d8d30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="194:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x4042cf54" defined="" size="I:32" alignment="I:4">
      <field name="__lock" ref="0x4042b278" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0x4042b2d8" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0x4042b338" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0x4042b398" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0x4042b3f8" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0x4042b458" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__flags" ref="0x4042b4b8" bit-offset="I:192" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__shared" ref="0x4042b518" bit-offset="I:200" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad1" ref="0x4042b578" bit-offset="I:208" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad2" ref="0x4042b5d8" bit-offset="I:216" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__writer" ref="0x4042b638" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="41:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.h" ref="0x40692d08" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x40692e10" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="6:lib/modules/../../includes/am_types.h" ref="0x40ad8d24" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="123:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b35078" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0x40b35180" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0x40b351e0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0x40b35240" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0x40b352a0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b35300" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="atleastonce" loc="98:/home/jblock/tiny/tinyos-main//tos/lib/tossim/tos.h" ref="0x405ebbe8" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="140:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x40428ac4" defined="" size="I:44" alignment="I:4">
      <field name="__lock" ref="0x40428bcc" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0x40428c2c" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0x40428c8c" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0x40428cec" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0x40428d4c" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0x40428dac" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0x40428e0c" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0x40428e6c" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="54:/home/jblock/tiny/tinyos-main//tos/platforms/micaz/sim/platform_hardware.h" ref="0x40851c34" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="39:includes/packet.h" ref="0x407e6960" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="97:/usr/include/stdlib.h" ref="0x404024ac" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0x404025b4" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0x40402614" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="300:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b44b78" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0x40b44c80" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0x40b44ce0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0x40b44d40" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0x40b44da0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0x40b44e00" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0x40b44e60" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b44ec0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="itimerval" loc="107:/usr/include/i386-linux-gnu/sys/time.h" ref="0x40670e24" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0x4066f268" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0x4041d514"/></type-tag>
      </field>
      <field name="it_value" ref="0x4066f2c8" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0x4041d514"/></type-tag>
      </field>
    </struct>
    <enum loc="673:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h" ref="0x4080057c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="cc2420_header_t" loc="60:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4085728c" defined="" size="I:12" alignment="I:1">
      <field name="length" ref="0x40857ea4" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x403c1c14"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x40857f04" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x403c30b0"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x40857f64" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x403c1c14"/></typename>
        </type-int>
      </field>
      <field name="destpan" ref="0x40856010" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x403c30b0"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x40856070" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x403c30b0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x408560d0" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0x403c30b0"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x40856130" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x403c1c14"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x40856190" bit-offset="I:88" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x403c1c14"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="173:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x4042ba48" defined="" size="I:32" alignment="I:4">
      <field name="__data" ref="0x4042bb50" bit-offset="I:0" size="I:32">
        <type-tag size="I:32" alignment="I:4"><struct-ref ref="0x4042cf54"/></type-tag>
      </field>
      <field name="__size" ref="0x4042bbb0" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4042bc10" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="90:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3ab08" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="101:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b39d8c" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x40b39e94" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0x40b39ef4" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0x40b39f54" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0x40b37010" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0x40b37070" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x402d815c" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0x402d82f8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_rxctrl0_enums" loc="294:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40871ee8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sigevent" ref="0x406f93b8" size="V:" alignment="V:">
    </struct>
    <enum name="cc2420_security_enums" loc="385:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4087e4ec" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="socket_t" loc="44:lib/interfaces/../../includes/socket.h" ref="0x40a8455c" defined="" size="I:404" alignment="I:2">
      <field name="fd" ref="0x40a8106c" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="flag" ref="0x40a810cc" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="state" ref="0x40a8112c" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x40a8118c" bit-offset="I:24" size="I:3">
        <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x40a85bac"/>
          <typename><typedef-ref name="socket_addr_t" ref="0x40a84124"/></typename>
        </type-tag>
      </field>
      <field name="dest" ref="0x40a811ec" bit-offset="I:48" size="I:3">
        <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x40a85bac"/>
          <typename><typedef-ref name="socket_addr_t" ref="0x40a84124"/></typename>
        </type-tag>
      </field>
      <field name="sendBuff" ref="0x40a8124c" bit-offset="I:72" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="ACKed" ref="0x40a812ac" bit-offset="I:1096" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="lastWritten" ref="0x40a8130c" bit-offset="I:2120" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="lastAck" ref="0x40a8136c" bit-offset="I:2128" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="lastSent" ref="0x40a813cc" bit-offset="I:2136" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="rcvdBuff" ref="0x40a8142c" bit-offset="I:2144" size="I:128">
        <type-array elements="I:128" size="I:128" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="lastRead" ref="0x40a8148c" bit-offset="I:3168" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="lastRcvd" ref="0x40a814ec" bit-offset="I:3176" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="largestAcceptable" ref="0x40a815cc" bit-offset="I:3184" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="nextExpected" ref="0x40a8162c" bit-offset="I:3192" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="RTT" ref="0x40a8168c" bit-offset="I:3200" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
        </type-int>
      </field>
      <field name="effectiveWindow" ref="0x40a816ec" bit-offset="I:3216" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="transfer" ref="0x40a8174c" bit-offset="I:3224" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="98:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b37244" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b3734c" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b373ac" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b39d8c"/></type-tag>
      </field>
    </union>
    <enum loc="75:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b3ba04" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="one" loc="13:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x402d863c" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x402d8800" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum loc="87:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h" ref="0x40790364" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x40853010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_fsmtc_enums" loc="372:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40880e88" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="90:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x404245f4" defined="" size="I:24" alignment="I:4">
      <field name="__data" ref="0x404246fc" bit-offset="I:0" size="I:24">
        <type-tag size="I:24" alignment="I:4"><struct-ref name="__pthread_mutex_s" ref="0x40425118"/></type-tag>
      </field>
      <field name="__size" ref="0x4042475c" bit-offset="I:0" size="I:24">
        <type-array elements="I:24" size="I:24" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x404247bc" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <union loc="215:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x4042f184" defined="" size="I:8" alignment="I:4">
      <field name="__size" ref="0x4042f28c" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0x4042f2ec" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="26:/home/jblock/tiny/tinyos-main//tos/types/AM.h" ref="0x40795f40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__locale_data" ref="0x403d2320" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0x401226f8" size="V:" alignment="V:">
    </attribute>
    <enum loc="52:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b1ed7c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="44:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.h" ref="0x407c9ae0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0x407c9be8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="snr_lqi" loc="9:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h" ref="0x40969b70" defined="" size="I:16" alignment="I:4">
      <field name="snr" ref="0x40966010" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="numLqi" ref="0x40966070" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x409660d0" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
            <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="82:/usr/include/wchar.h" ref="0x405782f0" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0x405783f8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0x40578458" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0x40578010"/></type-tag>
      </field>
    </struct>
    <struct loc="113:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0x404258c4" defined="" size="I:4" alignment="I:2">
      <field name="__espins" ref="0x404259cc" bit-offset="I:0" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__elision" ref="0x40425a2c" bit-offset="I:16" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <enum loc="102:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h" ref="0x4078f3ec" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="unsafe"  loc="NONE" ref="0x40122e8c" size="V:" alignment="V:">
    </attribute>
    <enum loc="12:includes/command.h" ref="0x40a5107c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="144:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4086c2ec" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="cc2420_footer_t" loc="83:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4085648c" defined="" size="I:0" alignment="I:1">
    </nx_struct>
    <struct loc="253:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b4af34" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0x40b49050" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0x40b490b0" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0x40b49110" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0x40b49170" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="231:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b4bdc4" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b4becc" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b4bf2c" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b4b940"/></type-tag>
      </field>
    </union>
    <struct loc="234:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b4b940" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0x40b4ba48" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0x40b4baa8" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0x40b4bb08" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0x40b4bb68" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0x40b4bbc8" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="10:includes/CommandMsg.h" ref="0x407d8df4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="27:/usr/include/i386-linux-gnu/bits/sigset.h" ref="0x404198d4" defined="" size="I:128" alignment="I:4">
      <field name="__val" ref="0x404199dc" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct loc="134:/usr/include/i386-linux-gnu/bits/types.h" ref="0x403f4780" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0x403f4888" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <enum name="cc2420_mdmctrl0_enums" loc="256:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40875a28" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_mdmctrl1_enums" loc="267:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40873170" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nts" loc="17:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x402dadc4" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0x402daf88" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct name="_IO_FILE_plus" ref="0x40588440" size="V:" alignment="V:">
    </struct>
    <struct name="exception" loc="326:/usr/include/math.h" ref="0x4055a37c" defined="" size="I:32" alignment="I:4">
      <field name="type" ref="0x4055a898" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0x4055a8f8" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0x4055a958" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0x4055a9b8" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0x4055aa18" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <union loc="67:/usr/include/stdlib.h" ref="0x403fdda0" defined="" size="I:4" alignment="I:4">
      <field name="__uptr" ref="0x403fdea8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0x403fe568"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0x403fdf08" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <struct name="sim_log_channel" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c" ref="0x405f021c" defined="" size="I:16" alignment="I:4">
      <field name="name" ref="0x405f07e4" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0x405f0844" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x405f08a4" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0x405f0904" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/>
              <typename><typedef-ref name="FILE" ref="0x4057a654"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0x401222d8" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h" ref="0x406788b0" defined="" size="I:480" alignment="I:4">
      <field name="key" ref="0x406771e8" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0x40677248" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0x406772a8" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0x40677308" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0x40677368" bit-offset="I:256" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0x406773c8" bit-offset="I:288" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <enum name="cc2420_main_enums" loc="247:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40876980" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="85:/usr/include/wchar.h" ref="0x40578010" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0x40578118" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0x40578178" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <nx_struct name="tcp_pack" loc="20:lib/modules/../../includes/TCPPacket.h" ref="0x40d740b0" defined="" size="I:19" alignment="I:1">
      <field name="srcPort" ref="0x40d74d74" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="destPort" ref="0x40d74dd4" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="ACK" ref="0x40d74e34" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="lastACK" ref="0x40d74e94" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="flag" ref="0x40d74ef4" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="window" ref="0x40d74f54" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0x40d73010" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0x40d73070" bit-offset="I:56" size="I:12">
        <type-array elements="I:12" size="I:12" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <attribute name="macro"  loc="NONE" ref="0x40122a10" size="V:" alignment="V:">
      <field name="macro_name" ref="0x40122b18" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum name="cc2420_enums" loc="155:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4086a498" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_sfdmux_enums" loc="380:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4087fdf8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="46:/usr/include/ctype.h" ref="0x405591ec" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="message_t" loc="14:/home/jblock/tiny/tinyos-main//tos/types/message.h" ref="0x4079d48c" defined="" size="I:48" alignment="I:1">
      <field name="header" ref="0x4079c010" bit-offset="I:0" size="I:11">
        <type-array elements="I:11" size="I:11" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0x4079c070" bit-offset="I:88" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0x4079c0d0" bit-offset="I:312" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0x4079c130" bit-offset="I:328" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="6:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimRadioMsg.h" ref="0x40794564" defined="" size="I:11" alignment="I:1">
      <field name="length" ref="0x40793110" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0x40793170" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0x407931d0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0x40793230" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x407953f0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0x40793290" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0x407953f0"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0x407932f0" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0x4079516c"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0x40793350" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0x403c1c14"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0x407933b0" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0x40796d80"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum loc="51:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h" ref="0x4042e298" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c" ref="0x405f1650" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_config_reg_enums" loc="173:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40868d84" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_noise_node_t" loc="73:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h" ref="0x40677754" defined="" size="I:184" alignment="I:4">
      <field name="key" ref="0x406766e4" bit-offset="I:0" size="I:64">
        <type-array elements="I:16" size="I:64" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </type-array>
      </field>
      <field name="freqKey" ref="0x40676744" bit-offset="I:512" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0x406767a4" bit-offset="I:672" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="noiseGenTime" ref="0x40676804" bit-offset="I:800" size="I:64">
        <type-array elements="I:16" size="I:64" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="noiseTable" ref="0x40676864" bit-offset="I:1312" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x405e90e8"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0x406768c4" bit-offset="I:1344" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0x40676924" bit-offset="I:1376" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0x40676984" bit-offset="I:1408" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0x406769e4" bit-offset="I:1440" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="94:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h" ref="0x40790904" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="196:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b2ea80" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0x40b2eb88" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0x40b2ebe8" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0x40b2ec48" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0x40b2eca8" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="cc2420_manfidl_enums" loc="362:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x40880128" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="120:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x408549d4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="63:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c" ref="0x405f0af0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="104:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x408553e4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="14:/home/jblock/tiny/tinyos-main//tos/types/AM.h" ref="0x40795be0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="43:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h" ref="0x40845d24" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="312:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h" ref="0x40b41548" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0x40b41650" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0x40b416b0" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40b41068"/></type-tag>
      </field>
    </union>
    <enum name="cc2420_iocfg1_enums" loc="356:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x408817c4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0x40122598" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0x402da750" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0x402da9c0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0x402daa20" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0x402daa80" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_rxctrl1_enums" loc="304:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h" ref="0x4086f40c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="117:/usr/include/stdlib.h" ref="0x40401084" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0x4040118c" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0x404011ec" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimSchedulerBasicP.nc" ref="0x407c8a5c" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc" ref="0x40928a74" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc" ref="0x40928118" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="528:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc" ref="0x40a41a10" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc" ref="0x408d27ec" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="69:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc" ref="0x409b20f4" defined="" scoped="" size="I:52" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0x409cc338" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0x409cc398" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x405d8830"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0x409cc3f8" bit-offset="I:96" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0x405d8830"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0x409cc458" bit-offset="I:160" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0x409cc4b8" bit-offset="I:224" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0x409cc518" bit-offset="I:288" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0x402db5c0"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0x409cc578" bit-offset="I:296" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0x409cc5d8" bit-offset="I:304" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0x409cc638" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
            <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0x409cc698" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:52" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0x409b20f4"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0x409b23c4"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="channel" ref="0x409cc6f8" bit-offset="I:384" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0x409cc758" bit-offset="I:392" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="74:lib/modules/SimpleSendP.nc" ref="0x40af6efc" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="71:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc" ref="0x40c41628" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="74:/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc" ref="0x40b1cae0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0x40b82690" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="53:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc" ref="0x40c60490" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="59:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc" ref="0x40c5f1cc" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0x40c5f2d4" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0x40c5f334" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0x40c5f394" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0x40c5f3f4" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0x40c5f454" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="47:/home/jblock/tiny/tinyos-main//tos/system/AMQueueP.nc" ref="0x40ca904c" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="169:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc" ref="0x40ca8758" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="126:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc" ref="0x40cce03c" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <struct loc="55:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc" ref="0x40ca4d1c" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0x40ca4e24" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
            <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="22:lib/modules/CommandHandlerP.nc" ref="0x40d0845c" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CommandHandlerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="hashmapEntry" loc="20:dataStructures/modules/HashmapC.nc" ref="0x40d6e8a4" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="HashmapC"/>
      <field name="key" ref="0x40d6ec1c" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
        </type-int>
      </field>
      <field name="value" ref="0x40d6ec7c" bit-offset="U:" size="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40d475a4"/></type-var>
      </field>
    </struct>
  </tags>
  <variables>
    <variable name="snr28" ref="0x40977bf4" loc="23:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:96" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr17" ref="0x40996edc" loc="38:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:132" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randCM" ref="0x406ebd4c" loc="39:/home/jblock/tiny/tinyos-main//tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0x407543a4" loc="298:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr7" ref="0x4097b680" loc="29:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:540" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr30" ref="0x409aaa3c" loc="43:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:7" size="I:84" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="current_node" ref="0x40681010" loc="52:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="test" ref="0x406ea248" loc="41:/home/jblock/tiny/tinyos-main//tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr23" ref="0x409786fc" loc="22:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:108" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__timezone" ref="0x40700508" loc="284:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr12" ref="0x4099b3c4" loc="35:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:16" size="I:192" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr2" ref="0x40986264" loc="27:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:42" size="I:504" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="channelTable" ref="0x405fc69c" loc="68:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x405e90e8"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0x40714b74" loc="58:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:184000" alignment="I:4">
        <type-tag size="I:184" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0x40677754"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0x40676a98"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="HASHMAP_CHANNEL" ref="0x407ea360" loc="20:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="outputs" ref="0x405fc3fc" loc="67:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c">
      <type-array elements="I:247" size="I:1976" alignment="I:4">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0x405f1a78"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0x405f0010"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0x407000ec" loc="282:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0x406eb908" loc="39:/home/jblock/tiny/tinyos-main//tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="snr21" ref="0x4095fc98" loc="20:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:108" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr26" ref="0x40963d9c" loc="17:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:96" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="timezone" ref="0x40710064" loc="298:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="eventHeap" ref="0x406567b8" loc="44:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0x406270e4"/>
        <typename><typedef-ref name="heap_t" ref="0x40627668"/></typename>
      </type-tag>
    </variable>
    <variable name="FLOODING_CHANNEL" ref="0x407d53f0" loc="11:includes/channels.h">
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="SECURITYLOCK" ref="0x4087ddb4" loc="399:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="137:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
        <short> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).</short>
        <long> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="snr15" ref="0x40999690" loc="36:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:132" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr5" ref="0x40981838" loc="28:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:46" size="I:552" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaRxTxDelay" ref="0x406a7b60" loc="54:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0x40716f24" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr18" ref="0x409ac84c" loc="41:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:132" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randC" ref="0x406eba6c" loc="39:/home/jblock/tiny/tinyos-main//tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr10" ref="0x409a0010" loc="33:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:26" size="I:312" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="FreqKeyNum" ref="0x407147c4" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
      </type-int>
    </variable>
    <variable name="snr29" ref="0x40976edc" loc="24:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:96" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaLow" ref="0x406a97cc" loc="47:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0x406a7064" loc="50:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr8" ref="0x4098ce50" loc="31:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:34" size="I:408" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr31" ref="0x409aa13c" loc="42:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:3" size="I:36" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="numTotal" ref="0x407144dc" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0x40700e34" loc="297:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0x406a7324" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0x405886e0" loc="320:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x40588440"/></type-tag>
    </variable>
    <variable name="allSnr" ref="0x409a9b38" loc="45:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:29" size="I:464" alignment="I:4">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="snr_lqi" ref="0x40969b70"/>
          <typename><typedef-ref name="snr_lqi_t" ref="0x40966184"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr24" ref="0x409663bc" loc="15:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:96" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="COMMAND_CHANNEL" ref="0x407d64a0" loc="6:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="randCD" ref="0x406ebbdc" loc="39:/home/jblock/tiny/tinyos-main//tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr0" ref="0x4097421c" loc="25:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:25" size="I:300" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="j97" ref="0x406ea084" loc="40:/home/jblock/tiny/tinyos-main//tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr13" ref="0x4099d6a8" loc="34:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:13" size="I:156" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TOS_NODE_ID" ref="0x405d8578" loc="78:/home/jblock/tiny/tinyos-main//tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0x405cf88c" loc="27:/usr/include/i386-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="snr3" ref="0x40971680" loc="26:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:540" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="tzname" ref="0x4070079c" loc="289:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0x40631310" loc="58:/home/jblock/tiny/tinyos-main//tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0x4011f10c"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0x40588ca8" loc="322:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x40588440"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0x406a9564" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0x406a75ec" loc="52:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0x4083c3c0" loc="51:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0x406c813c" loc="10:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:4">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0x406ba4b4"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0x406ba914"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr27" ref="0x409610b8" loc="18:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:108" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TRANSPORT_CHANNEL" ref="0x407d5e30" loc="17:includes/channels.h">
      <type-array elements="I:10" size="I:10" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0x405889c4" loc="321:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0x40588440"/></type-tag>
    </variable>
    <variable name="snr16" ref="0x409b07d4" loc="39:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:132" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0x406a92f4" loc="45:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr6" ref="0x40991270" loc="30:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:540" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="ROUTING_CHANNEL" ref="0x407d5908" loc="14:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="numCase2" ref="0x4071426c" loc="52:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr19" ref="0x409ad13c" loc="40:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:120" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_ticks" ref="0x40673dc8" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x405d8830"/></typename>
      </type-int>
    </variable>
    <variable name="snr22" ref="0x409791d8" loc="21:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:108" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__daylight" ref="0x407002ec" loc="283:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0x40590a50" loc="170:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0x406bad14" loc="9:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:4004" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0x406c037c"/>
            <typename><typedef-ref name="gain_entry_t" ref="0x406c0984"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="snr11" ref="0x409a34b4" loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:20" size="I:240" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0x405cf5f0" loc="26:/usr/include/i386-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0x40590560" loc="168:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0x40698c1c" loc="183:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="NEIGHBOR_CHANNEL" ref="0x407d6ec4" loc="10:includes/channels.h">
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="snr20" ref="0x409605bc" loc="19:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:120" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0x406811fc" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0x4055a1a8" loc="313:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x4055b404"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x4055be40"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0x406c8328" loc="11:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr25" ref="0x409646b0" loc="16:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:120" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="allSnr_len" ref="0x409bd010" loc="46:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="signgam" ref="0x4055c644" loc="148:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0x406a9064" loc="44:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr14" ref="0x40997010" loc="37:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:14" size="I:168" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="stdout" ref="0x405907d8" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0x406a7dec" loc="55:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0x406a9a94" loc="48:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0x406a78c0" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0x406a9d60" loc="49:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="GENERAL_CHANNEL" ref="0x407d69a4" loc="7:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="i97" ref="0x406ebf04" loc="40:/home/jblock/tiny/tinyos-main//tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0x407c7af4" loc="66:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0x407c755c" loc="60:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0x407c7358" loc="59:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0x407c782c" loc="61:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:11" size="I:11" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0x407c7e54" loc="67:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x405df3e4"/>
        <typename><typedef-ref name="sim_event_t" ref="0x405df63c"/></typename>
      </type-tag>
    </variable>
    <variable name="radioChannel" ref="0x4087b738" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="bootEvent" ref="0x4087b4f8" loc="54:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x405df3e4"/>
          <typename><typedef-ref name="sim_event_t" ref="0x405df63c"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0x4087b0c0" loc="52:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0x4088ee98" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0x4087b294" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0x408e67f4" loc="62:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
        <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0x408e6a6c" loc="63:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
          <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0x40924e8c" loc="78:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x405df3e4"/>
        <typename><typedef-ref name="sim_event_t" ref="0x405df63c"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0x40925854" loc="70:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0x40954140" loc="294:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0x40925dec" loc="72:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0x40924110" loc="73:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0x4092434c" loc="74:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
          <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0x40925af8" loc="71:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0x40920104" loc="80:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
        <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0x409249d4" loc="76:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0x409246d8" loc="75:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0x40924c44" loc="77:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0x409eb9f4" loc="206:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0x409b3414" loc="61:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0x409eb4c8" loc="203:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x405df3e4"/>
        <typename><typedef-ref name="sim_event_t" ref="0x405df63c"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0x409b3ea8" loc="65:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x405d8830"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0x409ea190" loc="208:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0x409cca14" loc="84:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0x409b20f4"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0x409b23c4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0x409ebcf0" loc="207:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
          <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="rssi" ref="0x409b388c" loc="63:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="clearThreshold" ref="0x409eb6e4" loc="205:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0x409b3b64" loc="64:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0x409b3204" loc="60:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
          <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0x409b3618" loc="62:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0x40a3cb90" loc="68:/home/jblock/tiny/tinyos-main//tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x40795860"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0x40a3c978" loc="67:/home/jblock/tiny/tinyos-main//tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x40a3c6c0" loc="66:/home/jblock/tiny/tinyos-main//tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="lsp" ref="0x40a777ac" loc="75:Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="lspLink" ref="0x40a4f22c"/>
        <typename><typedef-ref name="lspLink" ref="0x40a4f8b8"/></typename>
      </type-tag>
    </variable>
    <variable name="fdIndex" ref="0x40a95bcc" loc="82:Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="sendPackage" ref="0x40a689b0" loc="63:Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
        <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
      </type-tag>
    </variable>
    <variable name="lspAge" ref="0x40a779bc" loc="76:Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </variable>
    <variable name="sequence" ref="0x40a68bd4" loc="64:Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </variable>
    <variable name="neighborPayload" ref="0x40a67118" loc="66:Node.nc">
      <component-ref qname="Node"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-pointer>
    </variable>
    <variable name="fd" ref="0x40a959c0" loc="81:Node.nc">
      <component-ref qname="Node"/>
      <type-array elements="I:10" size="I:4040" alignment="I:2">
        <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
          <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="currentNeighbor" ref="0x40a68eb4" loc="65:Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
        <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
      </type-tag>
    </variable>
    <variable name="sequenceNum" ref="0x40b06e58" loc="30:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </variable>
    <variable name="pkt" ref="0x40b05394" loc="32:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
        <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
      </type-tag>
    </variable>
    <variable name="busy" ref="0x40b050e8" loc="31:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="base" ref="0x40b82558" loc="40:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0x40b821f8" loc="39:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0x40b82010" loc="38:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0x40b82340" loc="39:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0x40bb0c08" loc="80:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0x40bb0940" loc="74:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x405d8830"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0x40c0aa28" loc="480:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x405df3e4"/>
          <typename><typedef-ref name="sim_event_t" ref="0x405df63c"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0x40bc1850" loc="185:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x405df3e4"/>
          <typename><typedef-ref name="sim_event_t" ref="0x405df63c"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0x40bb30e0" loc="58:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0x40bb4d78" loc="57:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0x40c30ef0" loc="55:/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0x40c2e108" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0x40c5fa44" loc="69:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0x40c5f7f8" loc="68:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x40c5f1cc"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0x40c5f508"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="seed" ref="0x40c7c4e8" loc="52:/home/jblock/tiny/tinyos-main//tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
      </type-int>
    </variable>
    <variable name="current" ref="0x40ca2110" loc="59:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x40ca2550" loc="60:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref scoped="" ref="0x40ca4d1c"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x40ca4ed8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0x40ca2a2c" loc="61:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="index" ref="0x40ce498c" loc="61:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x40ce4e88" loc="62:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ce8940"/></type-var>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="free" ref="0x40ce4794" loc="60:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="pool" ref="0x40ce214c" loc="63:/home/jblock/tiny/tinyos-main//tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40ce8940"/></type-var>
      </type-array>
    </variable>
    <variable name="tail" ref="0x40cf76b8" loc="50:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x40cf7948" loc="51:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0x40cf7238" loc="48:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40cfdb7c"/></type-var>
      </type-array>
      <attribute-value>
        <attribute-ref name="one_nok" ref="0x402d8b6c"/>
        <value-structured>
          <type-tag size="I:4" alignment="I:4"><attribute-ref name="one_nok" ref="0x402d8b6c"/></type-tag>
        </value-structured>
      </attribute-value>
    </variable>
    <variable name="head" ref="0x40cf7428" loc="49:/home/jblock/tiny/tinyos-main//tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="container" ref="0x40d597b0" loc="18:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40d333a0"/></type-var>
      </type-array>
    </variable>
    <variable name="MAX_SIZE" ref="0x40d59478" loc="16:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0x40d599ac" loc="19:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </variable>
    <variable name="numofVals" ref="0x40d6d4d4" loc="27:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </variable>
    <variable name="HASH_MAX_SIZE" ref="0x40d6e31c" loc="15:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </variable>
    <variable name="map" ref="0x40d6d010" loc="25:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-tag size="U:" alignment="U:"><struct-ref name="hashmapEntry" scoped="" ref="0x40d6e8a4"/>
          <typename><typedef-ref name="hashmapEntry" scoped="" ref="0x40d6ed30"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="EMPTY_KEY" ref="0x40d6e614" loc="18:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </variable>
    <variable name="keys" ref="0x40d6d2a8" loc="26:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="activeSockets" ref="0x40db497c" loc="26:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-array elements="I:10" size="I:4040" alignment="I:2">
        <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
          <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="maxSockets" ref="0x40db45f8" loc="25:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
    <variable name="socketIndex" ref="0x40db432c" loc="24:lib/modules/TransportP.nc">
      <component-ref qname="TransportP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </variable>
  </variables>
  <constants>
    <constant cst="I:46" name="CC2420_DACTST" ref="0x40862f18" loc="219:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACIE" ref="0x40824a24" loc="1075:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0x40819388" loc="943:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0x4081f8d8" loc="1132:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0x40825380" loc="1058:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0x408409ec" loc="85:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0x407f5838" loc="140:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0x407e0c40" loc="81:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0x408101c8" loc="786:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0x4083c010" loc="1299:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0x408538c4" loc="133:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0x40b4c188" loc="222:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0x40841e50" loc="80:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0x407fc1c0" loc="705:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0x4081a010" loc="924:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0x4081f210" loc="1126:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0x408338b0" loc="1154:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0x4081b6f0" loc="919:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0x40831e74" loc="1182:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_STATUS_TX_UNDERFLOW" ref="0x408687b8" loc="169:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="CC2420_FSTST3" ref="0x408626c8" loc="215:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0x40822380" loc="1093:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0x408216a0" loc="1106:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0x40809c28" loc="876:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0x4081c010" loc="902:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0x4078f294" loc="98:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0x407fe890" loc="687:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MDMCTRL0_PAN_COORDINATOR" ref="0x40874010" loc="258:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0x40808398" loc="882:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0x40818bf0" loc="961:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0x403f07e4" loc="52:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0x40812010" loc="763:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_CCM" ref="0x4087eca4" loc="389:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0x407fa010" loc="730:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0x4083e058" loc="1275:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0x4055b5f4" loc="303:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0x40b4ccf8" loc="227:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0x4080a380" loc="858:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0x4081b8a8" loc="920:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_TXCTRL_TXMIX_CURRENT" ref="0x40871574" loc="288:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0x40b4c830" loc="225:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0x40843a58" loc="64:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0x407eff0c" loc="269:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0x407fcdb8" loc="714:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="CC2420_MANOR" ref="0x40863624" loc="207:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0x4080c8bc" loc="839:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_SECCTRL0_SEC_RXKEYSEL" ref="0x40884e44" loc="331:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0x40560d78" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0x407f335c" loc="169:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0x40819010" loc="939:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0x40844a58" loc="52:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0x4081e358" loc="1138:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0x408329f8" loc="1166:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0x407ed010" loc="283:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0x408186d4" loc="956:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0x4082f010" loc="1194:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0x4082d5b4" loc="1222:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PROTOCOL_NAME" ref="0x407d86b8" loc="13:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_FSCTRL" ref="0x40864130" loc="197:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RAM_TXFIFO" ref="0x40878010" loc="226:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CTR" ref="0x4087d614" loc="394:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL1_MODULATION_MODE" ref="0x4087391c" loc="270:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0x40b1bbc4" loc="58:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0x4080b380" loc="847:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0x40823a48" loc="1086:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0x407fe380" loc="684:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDL_MANFID" ref="0x408805a8" loc="364:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0x407ede9c" loc="298:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0x407f8a6c" loc="760:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0x4080ea40" loc="817:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0x4081470c" loc="1004:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0x40b4d5b4" loc="217:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0x407e387c" loc="36:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_TXCTRL_TXMIX_CAP_ARRAY" ref="0x408712e0" loc="287:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0x4080cdc4" loc="844:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0x4082d25c" loc="1218:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0x4082b8a8" loc="1246:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="CC2420_MANAND" ref="0x40863420" loc="206:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0x408181d0" loc="953:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0x40855e38" loc="109:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0x40b4c61c" loc="224:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0x4081de00" loc="901:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL0_SEC_CBC_HEAD" ref="0x40884664" loc="328:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0x407f3148" loc="166:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0x40845254" loc="128:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0x40b3a038" loc="78:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0x40b39310" loc="94:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0x40821d58" loc="1112:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0x40b1b250" loc="54:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0x407fade0" loc="740:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0x408221c8" loc="1092:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0x4082aba8" loc="1261:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0x405637dc" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0x4078fd6c" loc="106:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0x407e12b8" loc="47:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_SACK" ref="0x4086655c" loc="184:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_PACKET_HEADER_LENGTH" ref="0x407d7058" loc="11:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0x407f3dac" loc="182:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDH_PARTNUM" ref="0x40880c68" loc="369:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0x407f48ec" loc="154:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0x4067988c" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0x40819c20" loc="948:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0x40814554" loc="1003:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_IOCFG0_BCN_ACCEPT" ref="0x408828d4" loc="348:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_RXCTRL1_HIGH_HGM" ref="0x4086e0a4" loc="309:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="MAX_TTL" ref="0x407e9010" loc="15:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0x40811548" loc="779:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0x4080e378" loc="811:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0x4080d0e0" loc="821:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0x4082a9e8" loc="1258:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0x40810c08" loc="794:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0x4083ea7c" loc="1283:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0x40815e04" loc="997:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0x4083f34c" loc="89:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0x40b3a748" loc="85:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0x407f264c" loc="194:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CMD_ERROR" ref="0x40a50114" loc="20:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0x40812dc8" loc="773:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="MAC_PACKET_SIZE" ref="0x4086ce14" loc="150:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0x40800dd8" loc="679:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0x407fbdec" loc="727:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0x40842384" loc="68:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0x40842a2c" loc="71:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0x407fb6f0" loc="721:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0x4079076c" loc="89:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSMTC_TC_TXEND2PAOFF" ref="0x4087fbd0" loc="377:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0x40828438" loc="1025:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0x40b4d7f8" loc="218:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0x408524f4" loc="145:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0x4055b768" loc="304:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="CC2420_BATTMON" ref="0x40864788" loc="200:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0x4042eb0c" loc="56:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0x4085271c" loc="146:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0x407ee138" loc="272:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG1_CCAMUX" ref="0x40881e8c" loc="359:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL0_MED_LNA_GAIN" ref="0x408706ec" loc="297:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0x408295e4" loc="1267:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0x4083d1c0" loc="1289:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0x408287a0" loc="1027:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_NONCE_FLAGS" ref="0x4087676c" loc="244:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0x408331c0" loc="1148:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0x40831794" loc="1176:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0x4082fd70" loc="1204:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0x4082c380" loc="1232:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="CC2420_MDMCTRL1" ref="0x40865450" loc="191:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0x40810a58" loc="793:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0x4081a8b0" loc="933:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0x4082dde8" loc="1227:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0x40811a88" loc="782:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0x408166d0" loc="980:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0x4082a4fc" loc="1255:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RSSI_CCA_THR" ref="0x40872244" loc="276:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0x40b1b4a4" loc="55:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0x40828960" loc="1030:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0x407e18e0" loc="54:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0x407e3a84" loc="39:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0x407ef8fc" loc="264:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0x407fb1c8" loc="718:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0x40b1b700" loc="56:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0x407f1324" loc="216:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0x4080f724" loc="802:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0x4083e3c8" loc="1277:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0x4083da50" loc="1296:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0x407fd530" loc="696:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0x4080a6e0" loc="860:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0x40820ccc" loc="1123:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0x407f0434" loc="238:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0x4078f5d8" loc="103:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0x407f562c" loc="139:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0x40833388" loc="1151:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_TXCTRL_RESERVED" ref="0x40871a50" loc="290:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="NO_SEC" ref="0x4087ee68" loc="390:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0x408211b4" loc="1103:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0x407f5010" loc="134:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_SACKPEND" ref="0x4086677c" loc="185:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0x40853ea8" loc="139:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0x408205e4" loc="1117:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0x4081ebd8" loc="1145:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0x40831284" loc="1173:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0x4082f860" loc="1201:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0x40853b00" loc="134:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSCTRL_LOCK_STATUS" ref="0x40885c1c" loc="322:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0x40b3c194" loc="60:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0x40678230" loc="60:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0x407ee970" loc="278:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="CC2420_RAM_RXFIFO" ref="0x40878244" loc="227:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0x407fa8a8" loc="735:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0x40829b14" loc="1272:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0x40b4ca94" loc="226:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0x40829434" loc="1266:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0x4083d010" loc="1288:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SFLUSHRX" ref="0x40866144" loc="182:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CBC_MAC_4" ref="0x4087d0a4" loc="391:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0x4080b6e8" loc="849:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0x4080b010" loc="845:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0x4081cdc8" loc="912:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0x40845010" loc="127:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0x40809700" loc="873:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0x407ab27c" loc="60:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL0_LOW_LNA_GAIN" ref="0x40870980" loc="298:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0x40813f20" loc="1022:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0x40841388" loc="75:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0x40802130" loc="301:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0x408029a0" loc="313:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0x4055f4f8" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0x40827718" loc="1040:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0x40823890" loc="1085:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0x4080d5fc" loc="826:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="CC2420_FSTST0" ref="0x408620a4" loc="212:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0x40854bf0" loc="121:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0x407f0010" loc="232:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0x4081d55c" loc="894:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0x40817544" loc="968:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SXOSCOFF" ref="0x40867e88" loc="181:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG1_HSSD_SRC" ref="0x408819ec" loc="357:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0x4080e6e4" loc="815:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0x407f70a4" loc="87:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0x407fc378" loc="706:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0x40830738" loc="1187:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0x4082ecec" loc="1215:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0x4082b380" loc="1243:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0x407f2010" loc="185:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0x407f3990" loc="176:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_TXCTRL_PA_LEVEL" ref="0x40871cb4" loc="291:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0x40818010" loc="950:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0x407ed430" loc="287:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0x40843458" loc="61:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0x40841160" loc="74:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0x40855a1c" loc="107:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0x4082cbf0" loc="1237:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0x407f4f18" loc="163:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0x407f96f0" loc="745:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_NONCE_FRAME_COUNTER" ref="0x4087629c" loc="242:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0x407f5418" loc="136:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0x407efd08" loc="268:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0x408111c8" loc="775:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0x4042ee88" loc="58:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0x408427fc" loc="70:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0x40842e98" loc="73:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0x4066bb30" loc="52:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0x408407c4" loc="84:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0x4080ebdc" loc="818:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0x40823380" loc="1082:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0x408196f8" loc="945:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="CC2420_SECCTRL0" ref="0x40864350" loc="198:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0x4081fc20" loc="1134:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0x40832368" loc="1162:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0x407f40a4" loc="146:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0x407ef0a4" loc="254:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CMD_PING" ref="0x40a51218" loc="13:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0x407e3258" loc="27:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0x407f78d0" loc="99:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0x4081f580" loc="1128:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0x40833c20" loc="1156:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0x40830210" loc="1184:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0x4082e7c4" loc="1212:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0x4081ca58" loc="910:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_IOCFG0_SFD_POLARITY" ref="0x408810a4" loc="351:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0x407fdc00" loc="700:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0x40827de8" loc="1044:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0x408148d0" loc="1005:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="CC2420_AGCTST0" ref="0x40863a54" loc="209:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0x408219e8" loc="1108:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0x40815554" loc="992:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0x408128a0" loc="770:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SECCTRL0_SEC_TXKEYSEL" ref="0x40884ba4" loc="330:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0x407febf0" loc="689:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0x40813d68" loc="1021:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0x40b2e15c" loc="189:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0x40808720" loc="884:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0x40812370" loc="765:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0x40854df0" loc="122:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0x40b4d370" loc="216:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0x4081d8d8" loc="896:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_BATTMON_BATTMON_EN" ref="0x408821bc" loc="343:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0x4080cc04" loc="841:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PROTOCOL_DV" ref="0x407d8aac" loc="15:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0x408268c0" loc="1052:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0x4066bd78" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0x40818da0" loc="962:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="CC2420_RXCTRL0" ref="0x40865c8c" loc="195:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STATUS_LOCK" ref="0x40869d98" loc="166:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0x407e3e6c" loc="43:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0x4081ac30" loc="937:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0x40832d40" loc="1168:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0x4082f358" loc="1196:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0x4082d8fc" loc="1224:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0x4082a010" loc="1252:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL1_LNA_CAP_ARRAY" ref="0x4086e5a8" loc="311:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSCTRL_FREQ" ref="0x40885e58" loc="323:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0x40823db8" loc="1088:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0x407fe6e0" loc="686:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0x40816bf8" loc="985:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0x408417d8" loc="77:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0x4055c954" loc="191:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="PACKET_MAX_PAYLOAD_SIZE" ref="0x407ead70" loc="14:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0x407edc80" loc="295:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0x40b3ad08" loc="91:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_NONCE_SOURCE_ADDRESS" ref="0x40876530" loc="243:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0x40679d20" loc="58:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0x40b3b7ac" loc="71:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0x407f74c0" loc="93:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0x40824010" loc="1067:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0x4082bc18" loc="1248:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0x4080ba48" loc="851:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0x40670a3c" loc="97:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0x4081b010" loc="913:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CMD_KILL" ref="0x40a51ed8" loc="19:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0x4081dc50" loc="900:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0x408258dc" loc="1063:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0x407f2854" loc="197:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="CC2420_IOCFG0" ref="0x40864994" loc="201:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0x408200d4" loc="1114:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0x4081e6c8" loc="1142:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0x407f86fc" loc="756:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0x407faa60" loc="736:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0x4082af08" loc="1263:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0x407f81d4" loc="753:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL1_SEC_TXL" ref="0x40883860" loc="337:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_STATUS_ENC_BUSY" ref="0x40868450" loc="168:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0x407f838c" loc="754:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0x407f022c" loc="235:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0x408091d8" loc="870:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0x4081a530" loc="929:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_TIME_ACK_TURNAROUND" ref="0x4086a6e8" loc="156:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_FSCTRL_LOCK_THR" ref="0x40885238" loc="318:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0x4080aa44" loc="864:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0x408158c4" loc="994:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:304" name="CC2420_RAM_KEY1" ref="0x40878af0" loc="231:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0x407f2e98" loc="210:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0x40814010" loc="998:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0x40826df4" loc="1055:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0x4082452c" loc="1072:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0x40810010" loc="785:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0x4080fe24" loc="808:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MAIN_DEMOD_RESETn" ref="0x408750a4" loc="250:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0x4080ef24" loc="820:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0x4083edc4" loc="1285:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0x4080234c" loc="304:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0x407f46d0" loc="151:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0x407ed63c" loc="288:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0x40818374" loc="954:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0x40823530" loc="1083:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0x40822a40" loc="1097:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0x4084059c" loc="83:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0x40854138" loc="110:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0x4055cd34" loc="197:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0x4081d010" loc="891:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0x407fba60" loc="723:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL1_RXBPF_MIDCUR" ref="0x4086f8f0" loc="306:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_TIME_SYMBOL" ref="0x4086ab4c" loc="158:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0x408261c8" loc="1046:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0x407eed90" loc="282:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0x40802dc4" loc="319:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0x4083d520" loc="1291:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0x405d817c" loc="76:/home/jblock/tiny/tinyos-main//tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0x4042ecc4" loc="57:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0x40850b5c" loc="61:/home/jblock/tiny/tinyos-main//tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0x40831af4" loc="1178:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0x4082e0e4" loc="1206:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0x4082c6e0" loc="1234:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0x408506f0" loc="58:/home/jblock/tiny/tinyos-main//tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0x4080f8e8" loc="803:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="AM_COMMANDMSG" ref="0x407d61ec" loc="23:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0x40b3c5cc" loc="64:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0x407f98a8" loc="746:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0x4055b8e4" loc="305:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0x407fd010" loc="691:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0x4081c528" loc="905:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0x40822530" loc="1094:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_ACK_WAIT_DELAY" ref="0x40869540" loc="161:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSCTRL_CAL_DONE" ref="0x4088549c" loc="319:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0x408454cc" loc="129:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0x40827038" loc="1034:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0x4081f734" loc="1131:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0x40b3a950" loc="86:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0x40811e04" loc="784:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0x405f1874" loc="48:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0x407e3668" loc="33:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0x4083ddc0" loc="1298:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0x40b39124" loc="93:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0x407fd890" loc="698:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0x407fc010" loc="704:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PROTOCOL_TCP" ref="0x407d88b8" loc="14:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0x407f0c54" loc="250:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0x4081bdc0" loc="923:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0x4081f058" loc="1125:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0x408336f8" loc="1153:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0x40831cbc" loc="1181:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="CC2420_TOPTST" ref="0x40879140" loc="220:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0x408161c0" loc="977:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_CTR" ref="0x4087eab8" loc="388:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0x40817c10" loc="974:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0x408214fc" loc="1105:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STXON" ref="0x4086783c" loc="178:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0x408415b0" loc="76:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_SXOSCON" ref="0x40867228" loc="175:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0x408081d4" loc="881:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0x407f0a4c" loc="247:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0x407f8dcc" loc="762:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0x407ee344" loc="273:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0x407ed21c" loc="284:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0x407fa538" loc="733:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0x40829e84" loc="1274:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL0_AUTOCRC" ref="0x408749ec" loc="262:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0x40808c54" loc="887:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0x40843c58" loc="65:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0x407fcc08" loc="713:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL1_RXMIX_CURRENT" ref="0x4086ed40" loc="314:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0x40809a70" loc="875:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0x406792a4" loc="55:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SFDMUX_SFD" ref="0x4087e010" loc="381:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL0_AUTOACK" ref="0x40874c58" loc="263:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SRFOFF" ref="0x40867c68" loc="180:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL0_HIGH_LNA_GAIN" ref="0x40870458" loc="296:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0x4081e1b4" loc="1137:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0x40832854" loc="1165:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0x4056a3f8" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0x40818524" loc="955:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0x40830dec" loc="1193:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0x4082d410" loc="1221:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0x40802568" loc="307:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0x4080b1c8" loc="846:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0x407f3570" loc="172:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0x4080f1e4" loc="799:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0x4080d95c" loc="828:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0x4080c208" loc="835:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0x407f8010" loc="752:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0x40827a88" loc="1042:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CCM_4" ref="0x4087d7cc" loc="395:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_MAIN_ENC_RESETn" ref="0x40876de4" loc="249:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0x407f88bc" loc="759:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0x40560624" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0x40828e6c" loc="1033:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0x40b3b28c" loc="69:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0x407fc6e8" loc="708:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0x407f7cec" loc="105:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0x40815a7c" loc="995:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_STXENC" ref="0x40866b94" loc="187:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0x4082d0a4" loc="1217:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0x4082b6f0" loc="1245:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_SYNCWORD" ref="0x40865868" loc="193:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0x40800a70" loc="677:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0x407fe1c0" loc="681:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:360" name="CC2420_RAM_PANID" ref="0x4087747c" loc="235:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0x407f42b8" loc="149:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0x40843058" loc="59:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0x40855600" loc="105:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0x40821ba8" loc="1111:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0x408508e4" loc="59:/home/jblock/tiny/tinyos-main//tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0x407f9380" loc="743:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0x40822010" loc="1091:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0x408425c0" loc="69:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0x40825554" loc="1061:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0x40854568" loc="112:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0x40840374" loc="82:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0x407ef4cc" loc="258:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0x40819a68" loc="947:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0x4081e010" loc="1136:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0x4081439c" loc="1002:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0x407f5a44" loc="141:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0x408326b0" loc="1164:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0x40830c48" loc="1192:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:352" name="CC2420_RAM_IEEEADR" ref="0x40877250" loc="234:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0x4055ba60" loc="306:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_ROUTETABLE_DUMP" ref="0x40a518c8" loc="16:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0x40810538" loc="790:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0x4082a844" loc="1257:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0x4083e8d8" loc="1282:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0x40815c40" loc="996:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_MDMCTRL1_TX_MODE" ref="0x40873b88" loc="271:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SEND_BUFFER_SIZE" ref="0x40a507f4" loc="9:includes/sendInfo.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_RXCTRL1_LOW_LOWGAIN" ref="0x4086fb7c" loc="307:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0x40812c10" loc="772:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="ROOT_SOCKET_ADDR" ref="0x40a85010" loc="14:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MDMCTRL0_RESERVED_FRAME_MODE" ref="0x40875cd0" loc="257:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0x407e0420" loc="69:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0x407fb538" loc="720:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0x40813010" loc="1011:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0x407fe010" loc="680:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL1_DEMOD_AVG_MODE" ref="0x40873660" loc="269:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="CC2420_RXFIFO" ref="0x40879558" loc="222:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0x407f4d10" loc="160:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0x408456fc" loc="130:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0x40b2dae8" loc="212:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0x40581834" loc="184:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL1_CORR_THR" ref="0x408733ac" loc="268:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0x40833010" loc="1147:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0x408315e4" loc="1175:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0x4082fbc0" loc="1203:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0x4082c1d0" loc="1231:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0x4080e530" loc="812:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0x4081aa68" loc="934:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0x4082f6a0" loc="1198:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0x40811c4c" loc="783:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0x40816520" loc="979:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0x4082dc44" loc="1226:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0x4082a358" loc="1254:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0x407f6560" loc="119:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0x40825a94" loc="1064:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PROTOCOL_LINKSTATE" ref="0x407d84b0" loc="12:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0x4085020c" loc="56:/home/jblock/tiny/tinyos-main//tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0x40816898" loc="983:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0x40b3c814" loc="65:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0x4080a1c8" loc="857:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0x407fc8a8" loc="711:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0x40813bb8" loc="1020:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0x4080fc6c" loc="807:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0x407f2224" loc="188:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0x407ab618" loc="62:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0x407f6128" loc="111:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0x407fd380" loc="695:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0x4080a530" loc="859:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0x4081b370" loc="915:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0x4081b538" loc="918:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0x40823010" loc="1078:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0x40820b14" loc="1122:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STXCAL" ref="0x40867434" loc="176:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0x407f0e68" loc="253:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CMD_TEST_CLIENT" ref="0x40a51ae4" loc="17:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SOCKET_BUFFER_SIZE" ref="0x40a8547c" loc="16:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0x40842c5c" loc="72:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0x407f1b6c" loc="226:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0x40581668" loc="183:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0x40824874" loc="1074:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0x408131c0" loc="1012:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0x40821010" loc="1102:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0x4078fac4" loc="105:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0x408504d4" loc="57:/home/jblock/tiny/tinyos-main//tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0x40820434" loc="1116:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0x4081ea28" loc="1144:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0x408310d4" loc="1172:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0x407fa6f0" loc="734:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0x4082995c" loc="1271:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0x40b4d140" loc="215:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0x40829284" loc="1265:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0x40855814" loc="106:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0x407fb010" loc="717:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDL_PARTNUM" ref="0x40880350" loc="363:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0x4081a1d0" loc="927:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PROTOCOL_PINGREPLY" ref="0x407d8274" loc="11:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0x4080b538" loc="848:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0x4081cc10" loc="911:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_IOCFG0_CCA_POLARITY" ref="0x40881330" loc="352:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0x40809548" loc="872:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ELAST" ref="0x407abb7c" loc="65:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0x408136a4" loc="1015:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0x4080d298" loc="822:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0x40840c14" loc="86:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_IOCFG0_FIFOP_POLARITY" ref="0x40882e08" loc="350:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_BATTMON_BATTMON_VOLTAGE" ref="0x40882470" loc="344:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0x40824bd4" loc="1076:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CC2420_MANFIDL" ref="0x40864db8" loc="203:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0x407e0010" loc="63:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0x40801010" loc="322:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NO_SEC" ref="0x4087e6b8" loc="386:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0x40b3ccd8" loc="67:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0x40818a38" loc="960:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0x40817010" loc="963:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0x40817dc0" loc="975:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0x408236e0" loc="1084:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0x40853290" loc="127:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="CC2420_FSTST1" ref="0x408622b0" loc="213:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0x40826528" loc="1048:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0x403f094c" loc="53:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0x407f1d80" loc="229:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="TCP_PACKET_HEADER_LENGTH" ref="0x40d77c18" loc="16:lib/modules/../../includes/TCPPacket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="ROOT_SOCKET_PORT" ref="0x40a8523c" loc="15:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0x4081d398" loc="893:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0x4080d7ac" loc="827:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0x407e0a38" loc="78:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_CBC_MAC" ref="0x4087e8cc" loc="387:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SNOP" ref="0x40867010" loc="174:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CBC_MAC_8" ref="0x4087d284" loc="392:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0x40832010" loc="1158:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0x40810388" loc="789:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0x4080c568" loc="837:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0x40830580" loc="1186:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0x4082eb34" loc="1214:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0x408151c8" loc="988:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0x4082b1c8" loc="1242:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0x40b2fe48" loc="188:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL0_LOW_LNA_CURRENT" ref="0x4086f1d8" loc="301:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0x407f9c28" loc="750:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0x40819dd8" loc="949:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0x40843658" loc="62:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0x408171c0" loc="964:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0x408176f4" loc="969:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0x4082e444" loc="1208:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0x4082ca40" loc="1236:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_TXCTRL_TXMIXBUF_CUR" ref="0x40872d84" loc="285:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0x4080f3a8" loc="800:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0x40b2df10" loc="214:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0x4055bbe4" loc="307:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0x407f9538" loc="744:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0x40827398" loc="1036:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0x407f063c" loc="241:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0x40822890" loc="1096:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MAC_FOOTER_SIZE" ref="0x4086c940" loc="148:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0x40819540" loc="944:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="CC2420_SECCTRL1" ref="0x40864570" loc="199:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0x408241c8" loc="1068:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0x4081fa7c" loc="1133:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0x408321c4" loc="1161:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0x407f72ac" loc="90:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0x407f111c" loc="213:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STATUS_RSSI_VALID" ref="0x40869a80" loc="165:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0x408278d0" loc="1041:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0x40581488" loc="182:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0x407fda48" loc="699:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0x4081f3c8" loc="1127:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0x40833a68" loc="1155:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0x40830058" loc="1183:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0x4082e60c" loc="1211:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="CC2420_FSTST2" ref="0x408624bc" loc="214:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_NONCE_KEY_SEQ_COUNTER" ref="0x40876010" loc="241:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CCM_16" ref="0x4087db58" loc="397:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0x40825e10" loc="1066:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CCM_8" ref="0x4087d984" loc="396:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="CC2420_AGCTST1" ref="0x40863c6c" loc="210:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0x40821844" loc="1107:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0x40809de0" loc="877:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0x4081c1c8" loc="903:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0x408126e8" loc="769:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0x407fea40" loc="688:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0x40851ea4" loc="55:/home/jblock/tiny/tinyos-main//tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0x40b1be2c" loc="59:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0x40855c24" loc="108:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0x40809010" loc="867:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0x4080855c" loc="883:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL0_HIGH_LNA_CURRENT" ref="0x40870c3c" loc="299:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0x408121c0" loc="764:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0x407eeb7c" loc="279:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0x407fa1c8" loc="731:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0x40670c50" loc="101:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0x4083e210" loc="1276:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0x4083d898" loc="1295:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0x4085478c" loc="116:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SFLUSHTX" ref="0x40866364" loc="183:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL1_RXMIX_TAIL" ref="0x4086e828" loc="312:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0x4080bdc0" loc="855:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0x4081ba60" loc="921:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_MAIN" ref="0x40865010" loc="189:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0x40840e3c" loc="87:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0x40843858" loc="63:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0x40b4dca0" loc="220:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0x4080ca60" loc="840:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0x407f5e64" loc="145:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0x40800708" loc="675:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0x40b3b010" loc="68:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0x407f634c" loc="116:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0x40790db8" loc="96:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0x407e3c74" loc="41:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0x4055fc4c" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0x4081ade8" loc="938:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0x408139f8" loc="1017:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="CC2420_RXCTRL1" ref="0x40865ea4" loc="196:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0x40832b9c" loc="1167:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0x40818884" loc="957:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0x4082f1b4" loc="1195:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0x4082d758" loc="1223:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0x4082bdcc" loc="1251:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="CC2420_RSSI" ref="0x40865648" loc="192:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:336" name="CC2420_RAM_CBCSTATE" ref="0x40877010" loc="233:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NONCE_BLOCK_COUNTER" ref="0x40877c94" loc="240:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0x40b4da48" loc="219:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0x40823c00" loc="1087:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0x407fe530" loc="685:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0x408118c4" loc="781:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0x4080dcc4" loc="830:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0x40816a48" loc="984:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0x40826010" loc="1045:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0x4084594c" loc="131:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0x4080db0c" loc="829:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0x407eda64" loc="292:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_BACKOFF_PERIOD" ref="0x4086af18" loc="159:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="CC2420_AGCTST2" ref="0x40863e84" loc="211:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0x408251c8" loc="1057:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0x407e0e54" loc="84:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0x4082ba60" loc="1247:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0x4080b898" loc="850:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="CMD_PACKET_MAX_PAYLOAD_SIZE" ref="0x407d749c" loc="12:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0x407f8544" loc="755:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0x40581a1c" loc="185:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0x40826a84" loc="1053:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0x408231d0" loc="1081:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0x407e16d8" loc="51:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="CC2420_IOCFG1" ref="0x40864ba0" loc="202:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="AM_FLOODING" ref="0x40ad8eec" loc="7:lib/modules/../../includes/am_types.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MAIN_MOD_RESETn" ref="0x40875308" loc="251:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0x4056276c" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PROTOCOL_PING" ref="0x407d8038" loc="10:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0x40794128" loc="27:/home/jblock/tiny/tinyos-main//tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0x40821f08" loc="1113:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0x4081e518" loc="1141:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0x407f9010" loc="741:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0x4082ad58" loc="1262:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0x407ed848" loc="289:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_BATTMON_BATT_OK" ref="0x40883f28" loc="342:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0x40b3bbd0" loc="76:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0x4078f844" loc="104:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_TIME_VREN" ref="0x4086a910" loc="157:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL1_SEC_RXL" ref="0x40883acc" loc="338:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0x407f4b08" loc="157:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0x407f2a6c" loc="202:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0x4081570c" loc="993:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0x407ef2b0" loc="255:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0x4055b210" loc="203:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_MAIN_RESETn" ref="0x40876b80" loc="248:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0x40563088" loc="49:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0x408534f4" loc="128:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0x40790b68" loc="95:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0x407f1538" loc="219:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0x4080e010" loc="809:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0x4080ed80" loc="819:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0x4083ec20" loc="1284:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0x4080f010" loc="796:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MAIN_XOSC16M_BYPASS" ref="0x408757ec" loc="253:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0x407e1afc" loc="57:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0x40811010" loc="774:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0x4042e95c" loc="55:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0x4055b010" loc="200:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0x40808e28" loc="890:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0x407e0830" loc="75:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0x407fb8a8" loc="722:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0x408446b0" loc="47:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0x40b1b95c" loc="57:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0x40813500" loc="1014:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0x408271e8" loc="1035:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0x40841a00" loc="78:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0x40678010" loc="59:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0x407ee764" loc="277:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0x40813848" loc="1016:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SYNCWORD_SYNCWORD" ref="0x4087290c" loc="281:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0x40b2fc0c" loc="187:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0x40844460" loc="46:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0x40829794" loc="1268:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0x4083d370" loc="1290:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0x40842154" loc="67:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0x40827550" loc="1037:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="TCP_PACKET_MAX_PAYLOAD_SIZE" ref="0x40d77ebc" loc="17:lib/modules/../../includes/TCPPacket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0x4080e888" loc="816:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0x4082437c" loc="1071:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL1_MED_HGM" ref="0x4086e308" loc="310:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0x40b3ca70" loc="66:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0x40831944" loc="1177:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0x4082ff20" loc="1205:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0x4082c530" loc="1233:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="CC2420_MDMCTRL0" ref="0x40865230" loc="190:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0x408108a0" loc="792:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0x4081a6f8" loc="932:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_MIN_BACKOFF" ref="0x408692e4" loc="160:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0x4082c010" loc="1228:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0x4082a6a0" loc="1256:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0x407f377c" loc="173:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0x40816da8" loc="986:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0x4083e734" loc="1281:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0x40b4def8" loc="221:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0x407f5214" loc="135:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_STXONCCA" ref="0x40867a5c" loc="179:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL0_CCA_MOD" ref="0x40874780" loc="261:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL0_PREAMBLE_LENGTH" ref="0x40874f14" loc="264:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0x407ab7dc" loc="63:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0x4081c378" loc="904:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2147483648" name="CC2420_INVALID_TIMESTAMP" ref="0x4087c284" loc="403:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:247" name="SIM_LOG_OUTPUT_COUNT" ref="0x405fc038" loc="64:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0x408178ac" loc="970:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_SFDMUX_XOSC16M_STABLE" ref="0x4087e2b0" loc="382:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0x40b3b51c" loc="70:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0x40790540" loc="88:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0x40816370" loc="978:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_RXCTRL1_RXBPF_LOCUR" ref="0x4086f65c" loc="305:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0x408106e8" loc="791:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0x40828288" loc="1024:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0x407f2c84" loc="207:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0x40811700" loc="780:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0x4083e580" loc="1278:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0x4083dc08" loc="1297:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_FSCTRL_LOCK_LENGTH" ref="0x4088599c" loc="321:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_LENGTH" ref="0x40a503fc" loc="24:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0x40b3a570" loc="84:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0x407fd6e0" loc="697:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0x407fddc0" loc="703:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0x407ab0a4" loc="59:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0x4080a890" loc="861:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0x4081c8a0" loc="909:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0x407f5c58" loc="144:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0x4081bc10" loc="922:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0x40820e84" loc="1124:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0x40833540" loc="1152:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0x40821358" loc="1104:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0x40820794" loc="1118:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0x40808010" loc="880:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0x4081ed88" loc="1146:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0x407f8c1c" loc="761:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0x40831434" loc="1174:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0x4082fa10" loc="1202:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0x40559904" loc="48:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0x407fa380" loc="732:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0x40829ccc" loc="1273:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:288" name="CC2420_RAM_SABUF" ref="0x408788d0" loc="230:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="CC2420_ADCTST" ref="0x40862d0c" loc="218:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="MAC_HEADER_SIZE" ref="0x4086c688" loc="146:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MAIN_FS_RESETn" ref="0x40875560" loc="252:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0x40800c28" loc="678:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0x40808a9c" loc="886:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL0_RXMIXBUF_CUR" ref="0x408701b8" loc="295:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0x407fca58" loc="712:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0x40843e58" loc="66:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0x408098b8" loc="874:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0x40817384" loc="965:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0x407ef6e0" loc="261:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0x407f6d98" loc="131:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0x40828cc8" loc="1032:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0x40802bbc" loc="316:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_SECCTRL0_SEC_M" ref="0x4088317c" loc="332:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0x4080c718" loc="838:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0x4081d720" loc="895:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0x40817a6c" loc="973:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0x408280d8" loc="1023:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0x407f76c8" loc="96:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0x407fc530" loc="707:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:320" name="CC2420_RAM_TXNONCE" ref="0x40878d30" loc="232:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0x40810db8" loc="795:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0x4080bc08" loc="854:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0x408308f0" loc="1188:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0x4082eea4" loc="1216:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0x4082b538" loc="1244:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0x40844010" loc="44:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0x4081335c" loc="1013:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0x4055cb58" loc="194:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0x40b3a398" loc="83:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0x408246d0" loc="1073:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0x40844cbc" loc="53:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:272" name="CC2420_RAM_RXNONCE" ref="0x408786a4" loc="229:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0x40b3bdd0" loc="77:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0x40b2f9c8" loc="186:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0x40679038" loc="54:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0x40816010" loc="976:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_SAES" ref="0x40866d8c" loc="188:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0x4083f14c" loc="88:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0x407f6b84" loc="128:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0x40843258" loc="60:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0x40678688" loc="61:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0x4082cda0" loc="1238:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL1_RXMIX_VCM" ref="0x4086eaa0" loc="313:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0x407f91c8" loc="742:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_FSMTC" ref="0x40863214" loc="205:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0x408266fc" loc="1051:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDH_VERSION" ref="0x40880a04" loc="368:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0x40811380" loc="776:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CBC_MAC_16" ref="0x4087d470" loc="393:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0x4080de74" loc="831:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0x40826378" loc="1047:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ETIMEOUT" ref="0x407ab9b4" loc="64:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0x40844260" loc="45:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:62" name="CC2420_TXFIFO" ref="0x4087934c" loc="221:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0x408198b0" loc="946:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0x4081fdc4" loc="1135:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0x4083250c" loc="1163:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0x40830aa4" loc="1191:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL0_MED_LNA_CURRENT" ref="0x40870ef0" loc="300:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0x4078f038" loc="97:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0x40562010" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0x4080adcc" loc="866:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="PROTOCOL_CMD" ref="0x407d8cbc" loc="16:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0x407e10a4" loc="44:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0x4080e1c0" loc="810:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0x40814a94" loc="1006:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0x40825010" loc="1056:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0x407f44c4" loc="150:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL0_SEC_MODE" ref="0x408833f4" loc="333:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0x408141e4" loc="1001:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSMTC_TC_SWITCH2TX" ref="0x4087f430" loc="374:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_FSCTRL_CAL_RUNNING" ref="0x4088571c" loc="320:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0x40812a58" loc="771:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0x407feda0" loc="690:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0x40828b10" loc="1031:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0x407f174c" loc="222:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0x40b2dcfc" loc="213:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0x408088e4" loc="885:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0x4042e428" loc="52:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0x4042e790" loc="54:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0x407fb380" loc="719:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0x40812520" loc="766:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0x4080d448" loc="823:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="CC2420_RXBPFTST" ref="0x408628e8" loc="216:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0x407ee550" loc="274:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0x4081da90" loc="897:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0x40b3af10" loc="92:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0x40852138" loc="140:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0x40825718" loc="1062:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0x40795dd8" loc="15:/home/jblock/tiny/tinyos-main//tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0x4084014c" loc="81:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_FSMTC_TC_TXEND2SWITCH" ref="0x4087f93c" loc="376:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0x4042e5d8" loc="53:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_TXCTRL_PA_CURRENT" ref="0x408717ec" loc="289:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0x4082f4fc" loc="1197:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0x4080faac" loc="804:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0x4082daa0" loc="1225:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0x4082a1b4" loc="1253:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0x4056ab5c" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_SIZE" ref="0x4086a274" loc="152:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0x407e14c4" loc="48:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0x40826c3c" loc="1054:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_FSMTC_TC_PAON2TX" ref="0x4087f69c" loc="375:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0x407f6768" loc="122:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0x4080a010" loc="856:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL1_MED_LOWGAIN" ref="0x4086fe08" loc="308:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0x407ab454" loc="61:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0x40841c28" loc="79:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0x4083f540" loc="90:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0x40824d8c" loc="1077:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0x407f7ae4" loc="102:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0x407fd1d0" loc="694:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0x4081b1c0" loc="914:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0x4082095c" loc="1121:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="CC2420_AGCCTRL" ref="0x4086383c" loc="208:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0x407f0844" loc="244:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0x407f2438" loc="191:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0x40822da4" loc="1101:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0x407f3b98" loc="179:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0x407efb04" loc="267:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="CC2420_FMSTATE" ref="0x40862b00" loc="217:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0x4085434c" loc="111:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0x40820284" loc="1115:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0x4081e878" loc="1143:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0x40832f00" loc="1171:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="MAX_NUM_OF_SOCKETS" ref="0x40a66d64" loc="13:lib/interfaces/../../includes/socket.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="CC2420_STATUS_XOSC16M_STABLE" ref="0x40868b34" loc="170:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CC2420_MANFIDH" ref="0x40863010" loc="204:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0x407fac18" loc="737:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0x408290d4" loc="1264:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_SRXDEC" ref="0x40866988" loc="186:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CMD_TEST_SERVER" ref="0x40a51d00" loc="18:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="AM_PACK" ref="0x407e6b00" loc="40:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0x4081a380" loc="928:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:362" name="CC2420_RAM_SHORTADR" ref="0x408776c4" loc="236:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0x40b1b010" loc="53:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0x4079434c" loc="28:/home/jblock/tiny/tinyos-main//tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MDMCTRL0_ADR_DECODE" ref="0x4087429c" loc="259:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0x40809390" loc="871:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0x40b4c3ec" loc="223:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSMTC_TC_RXCHAIN2RX" ref="0x4087f1b0" loc="373:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0x4080c058" loc="834:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_RAM_KEY0" ref="0x40878464" loc="228:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0x40814c58" loc="1007:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0x40825c4c" loc="1065:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0x407e1d18" loc="60:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0x40802784" loc="310:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0x407e0628" loc="72:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL1_RX_MODE" ref="0x40873df4" loc="272:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0x40814e0c" loc="1010:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_TXCTRL_TX_TURNAROUND" ref="0x40871038" loc="286:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_NEIGHBOR_DUMP" ref="0x40a51448" loc="14:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0x40845b7c" loc="132:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0x40822bf0" loc="1098:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0x40670818" loc="94:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_SRXON" ref="0x40867638" loc="177:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0x40827c38" loc="1043:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0x4081d1d4" loc="892:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0x407fbc18" loc="724:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_IOCFG1_SFDMUX" ref="0x40881c3c" loc="358:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="PACKET_HEADER_LENGTH" ref="0x407ea97c" loc="13:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0x407e3460" loc="30:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0x407f7ef4" loc="108:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0x4080ac08" loc="865:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0x40833dd8" loc="1157:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0x4080c3b8" loc="836:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0x408303c8" loc="1185:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0x40815010" loc="987:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0x4082e97c" loc="1213:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0x4082b010" loc="1241:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0x408008b8" loc="676:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0x407e0218" loc="66:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RSSI_RSSI_VAL" ref="0x40872494" loc="277:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0x4083d6d0" loc="1292:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_STATUS_TX_ACTIVE" ref="0x40868110" loc="167:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0x407f9de0" loc="751:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0x405d831c" loc="76:/home/jblock/tiny/tinyos-main//tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CMD_LINKSTATE_DUMP" ref="0x40a51684" loc="15:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0x4082e294" loc="1207:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0x40679a94" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0x403f0ad0" loc="54:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0x4082c890" loc="1235:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SECCTRL0_SEC_SAKEYSEL" ref="0x40884904" loc="329:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0x407f6970" loc="125:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0x408191d0" loc="942:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0x407f1958" loc="223:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG0_FIFO_POLARITY" ref="0x40882b68" loc="349:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0x4080f56c" loc="801:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG0_FIFOP_THR" ref="0x4088159c" loc="353:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0x40562ec0" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0x407f9a60" loc="747:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SECCTRL0_RXFIFO_PROTECTION" ref="0x408843c4" loc="327:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0x408285e8" loc="1026:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_MDMCTRL0_CCA_HYST" ref="0x40874514" loc="260:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0x4081c6d8" loc="906:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="CC2420_TXCTRL" ref="0x40865a74" loc="194:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0x40815380" loc="989:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0x408226e0" loc="1095:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0x407c7104" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="NUM_TASKS" ref="0x407c8f18" loc="55:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="stopDoneTask" ref="0x40928010" loc="101:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendDoneTask" ref="0x408d26e4" loc="145:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="startDoneTask" ref="0x4092886c" loc="96:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="read_rssi_task" ref="0x40a41908" loc="528:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendBufferTask" ref="0x40af6df4" loc="74:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0x40b8280c" loc="45:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0x40b829d0" loc="46:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0x40b1c9d8" loc="74:/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0x40c608a0" loc="56:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0x40c41520" loc="71:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0x40c606a8" loc="55:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="NUM_CLIENTS" ref="0x40ca9514" loc="48:/home/jblock/tiny/tinyos-main//tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0x40ca8650" loc="169:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0x40ca8f00" loc="126:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="processCommand" ref="0x40d08354" loc="22:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0x402e3dd0" loc="125:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="intptr_t" ref="0x402e3dd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0x407a090c" loc="134:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0x407a031c"/>
        <typename><typedef-ref name="serial_packet_t" ref="0x407a090c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0x40b4a678" loc="247:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b4bdc4"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0x40b4a678"/></typename>
      </type-tag>
    </typedef>
    <typedef name="socket_addr_t" ref="0x40a84124" loc="37:lib/interfaces/../../includes/socket.h">
      <type-tag size="I:3" alignment="I:1"><nx_struct-ref name="socket_addr_t" ref="0x40a85bac"/>
        <typename><typedef-ref name="socket_addr_t" ref="0x40a84124"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0x4042f61c" loc="225:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0x4042f61c"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0x40125608" loc="324:/usr/lib/gcc/i686-linux-gnu/4.8/include/stddef.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0x40125608"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0x4085528c" loc="99:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40855010"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0x4085528c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="socket_fd_t" ref="0x40a84384" loc="41:lib/interfaces/../../includes/socket.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="socket_fd_t" ref="0x40a84384"/></typename>
      </type-int>
    </typedef>
    <typedef name="ushort" ref="0x40415d40" loc="151:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0x40415d40"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0x40793a28" loc="22:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0x40793688"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0x40793a28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int64_t" ref="0x403f25a8" loc="46:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0x403f25a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0x403eece4" loc="38:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0x403eece4"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0x407a0124" loc="129:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0x407a16bc"/>
        <typename><typedef-ref name="serial_header_t" ref="0x407a0124"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0x407c945c" loc="42:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x407c92a0"/>
        <typename><typedef-ref name="TMilli" ref="0x407c945c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="cc2420_metadata_t" ref="0x4086d81c" loc="108:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="86:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet metadata.</short>
        <long>&#10; CC2420 Packet metadata. Contains extra information about the message&#10; that will not be transmitted.&#10;&#10; Note that the first two bytes automatically take in the values of the&#10; FCS when the payload is full. Do not modify the first two bytes of metadata.&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x408568d8"/>
        <typename><typedef-ref name="cc2420_metadata_t" ref="0x4086d81c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__u_char" ref="0x403ee044" loc="30:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0x403ee044"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0x40b37ba0" loc="111:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0x40b37ba0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0x40b46010" loc="278:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0x40b46010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0x403fb694" loc="186:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__intptr_t" ref="0x403fb694"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0x403fb274" loc="182:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0x403f2a68"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0x403fb274"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0x40b365e4" loc="116:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0x40b365e4"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0x4041b618" loc="75:/usr/include/i386-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x4041b45c"/>
        <typename><typedef-ref name="fd_set" ref="0x4041b618"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0x405d8830" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0x405d8830"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0x403fb484" loc="183:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0x403fb484"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0x403f9478" loc="139:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__time_t" ref="0x403f9478"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0x403fc81c" loc="172:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ssize_t" ref="0x403fc81c"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0x4046fd1c" loc="35:/usr/include/i386-linux-gnu/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0x4046fd1c"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0x4041297c" loc="70:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0x4041297c"/></typename>
      </type-int>
    </typedef>
    <typedef name="CommandMsg" ref="0x407d7e90" loc="20:includes/CommandMsg.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="CommandMsg" ref="0x407d7688"/>
        <typename><typedef-ref name="CommandMsg" ref="0x407d7e90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0x40b49894" loc="262:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b49358"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0x40b49894"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0x405779f4" loc="154:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0x405779f4"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0x402e0bd0" loc="67:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0x402e0bd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0x4011f010"  loc="NONE">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x40119f04"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0x403f2360" loc="41:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0x403f2360"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0x407c9c9c" loc="44:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x407c9ae0"/>
        <typename><typedef-ref name="TMicro" ref="0x407c9c9c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsword_t" ref="0x403fc60c" loc="170:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsword_t" ref="0x403fc60c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0x403fc134" loc="166:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0x403fc134"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0x40412bb8" loc="75:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="nlink_t" ref="0x40412bb8"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0x40415010" loc="59:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clock_t" ref="0x40415010"/></typename>
      </type-int>
    </typedef>
    <typedef name="security_header_t" ref="0x40857064" loc="58:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="49:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Security Header&#10;</short>
      </documentation>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="security_header_t" ref="0x408583d0"/>
        <typename><typedef-ref name="security_header_t" ref="0x40857064"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0x40b48d64" loc="277:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0x40b48d64"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_status_t" ref="0x40858064" loc="4:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="33:/home/jblock/tiny/tinyos-main//tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="cc2420_status_t" ref="0x40858064"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0x40427bf4" loc="159:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x404279d8"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0x40427bf4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0x40627668" loc="65:/home/jblock/tiny/tinyos-main//tos/lib/tossim/heap.h">
      <documentation loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0x406270e4"/>
        <typename><typedef-ref name="heap_t" ref="0x40627668"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0x403f6440" loc="126:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0x403f6440"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0x403c30b0" loc="446:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0x403c30b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0x405f09b8" loc="61:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_log_channel" ref="0x405f021c"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0x405f09b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0x404135f0" loc="35:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0x404135f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0x4042c0f4" loc="167:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0x4042c0f4"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0x40415f20" loc="152:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0x40415f20"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0x40795860" loc="11:/home/jblock/tiny/tinyos-main//tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0x40795860"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0x40b49bb4" loc="265:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b49358"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0x40b49bb4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0x402e10e8" loc="76:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0x402e10e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0x403f493c" loc="134:/usr/include/i386-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x403f4780"/>
        <typename><typedef-ref name="__fsid_t" ref="0x403f493c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0x40b49e4c" loc="269:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0x40b49e4c"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0x40b485ec" loc="272:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0x40b485ec"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0x402e3938" loc="110:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0x402e3938"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0x404224a4" loc="228:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blksize_t" ref="0x404224a4"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0x402e0e34" loc="72:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0x402e0e34"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0x40b41764" loc="324:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b41548"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x40b41764"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0x403f4470" loc="133:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0x403f4470"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0x403ee46c" loc="32:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0x403ee46c"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0x40b36380" loc="115:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0x40b36380"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0x40b48aec" loc="276:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0x40b48aec"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0x405df63c" loc="51:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0x405df3e4"/>
        <typename><typedef-ref name="sim_event_t" ref="0x405df63c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0x407b8360" loc="68:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0x407b8360"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0x40419328" loc="22:/usr/include/i386-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0x40419328"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0x40b306ac" loc="178:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b30490"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0x40b306ac"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0x403f9b28" loc="143:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0x403f9b28"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0x403f6674" loc="127:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ino_t" ref="0x403f6674"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_socket_port_t" ref="0x40a85740" loc="30:lib/interfaces/../../includes/socket.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_socket_port_t" ref="0x40a85740"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0x402e077c" loc="65:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0x402e077c"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_packet_t" ref="0x4086c194" loc="114:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_packet_t" ref="0x4086db44"/>
        <typename><typedef-ref name="cc2420_packet_t" ref="0x4086c194"/></typename>
      </type-tag>
    </typedef>
    <typedef name="FILE" ref="0x4057a654" loc="48:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/>
        <typename><typedef-ref name="FILE" ref="0x4057a654"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0x4045876c" loc="742:/usr/include/stdlib.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0x4045876c"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0x403d0010" loc="39:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0x403d2190"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0x403d0010"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0x40851adc" loc="161:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0x40851adc"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0x403f6b10" loc="129:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0x403f6b10"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0x403d0274" loc="42:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0x403d2190"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0x403d0274"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0x407a14c4" loc="121:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0x4078ff50"/>
        <typename><typedef-ref name="radio_stats_t" ref="0x407a14c4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0x40415550" loc="91:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0x40415550"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0x40b45674" loc="291:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0x40b45674"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0x40b45dc4" loc="294:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0x40b45dc4"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0x40412750" loc="65:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0x40412750"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0x40413ec8" loc="39:/usr/include/i386-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x403f4780"/>
        <typename><typedef-ref name="fsid_t" ref="0x40413ec8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0x4078a044" loc="59:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0x4078ce30"/>
        <typename><typedef-ref name="sim_packet_t" ref="0x4078a044"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0x40851614" loc="158:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40851278"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40851614"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0x402db5c0" loc="36:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0x402db5c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0x405f0010" loc="54:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.c">
      <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0x405f1a78"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0x405f0010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0x4041db2c" loc="48:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0x4041db2c"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0x40419cf4" loc="37:/usr/include/i386-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x404198d4"/>
        <typename><typedef-ref name="sigset_t" ref="0x40419cf4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="T32khz" ref="0x407c987c" loc="43:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x407c96c0"/>
        <typename><typedef-ref name="T32khz" ref="0x407c987c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0x404133dc" loc="34:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0x404133dc"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0x40793464" loc="18:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimRadioMsg.h">
      <documentation loc="14:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimRadioMsg.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0x40794564"/>
        <typename><typedef-ref name="tossim_header_t" ref="0x40793464"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0x401251a8" loc="147:/usr/lib/gcc/i686-linux-gnu/4.8/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ptrdiff_t" ref="0x401251a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0x40692ec4" loc="41:/home/jblock/tiny/tinyos-main//tos/lib/timer/Timer.h">
      <documentation loc="1:NodeC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0x40692d08"/>
        <typename><typedef-ref name="TSecond" ref="0x40692ec4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0x40422708" loc="235:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blkcnt_t" ref="0x40422708"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0x402e02c0" loc="51:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0x402e02c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0x403c39c8" loc="448:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0x403c39c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0x403bc878" loc="435:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0x403bc878"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0x402e4010" loc="128:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uintptr_t" ref="0x402e4010"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0x40417adc" loc="116:/usr/include/i386-linux-gnu/sys/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0x40417adc"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0x403ee690" loc="33:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_long" ref="0x403ee690"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0x402e3bb8" loc="112:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0x402e3bb8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0x403eef1c" loc="39:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0x403eef1c"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0x40b48374" loc="271:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0x40b48374"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0x404131a0" loc="33:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0x404131a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0x40848ee8" loc="120:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0x40848ee8"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0x402e1d8c" loc="96:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast16_t" ref="0x402e1d8c"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0x40b48874" loc="275:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0x40b48874"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0x40b46500" loc="280:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0x40b46500"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0x40590264" loc="110:/usr/include/stdio.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0x40578960"/>
        <typename><typedef-ref name="fpos_t" ref="0x40590264"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0x40b4a344" loc="244:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b4bdc4"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0x40b4a344"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0x404026c8" loc="101:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x404024ac"/>
        <typename><typedef-ref name="div_t" ref="0x404026c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0x406ba914" loc="6:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0x406ba4b4"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0x406ba914"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0x401253cc" loc="212:/usr/lib/gcc/i686-linux-gnu/4.8/include/stddef.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="size_t" ref="0x401253cc"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0x403eeab8" loc="37:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0x403eeab8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0x40419a90" loc="30:/usr/include/i386-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0x404198d4"/>
        <typename><typedef-ref name="__sigset_t" ref="0x40419a90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0x40b37930" loc="110:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b37244"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0x40b37930"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0x403fb010" loc="181:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0x403fb010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0x403f68ec" loc="128:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0x403f68ec"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_port_t" ref="0x40a859a4" loc="31:lib/interfaces/../../includes/socket.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="socket_port_t" ref="0x40a859a4"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0x40796d80" loc="6:/home/jblock/tiny/tinyos-main//tos/types/AM.h">
      <documentation loc="34:/home/jblock/tiny/tinyos-main//tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0x40796d80"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0x4079e69c" loc="53:/home/jblock/tiny/tinyos-main//tos/lib/tossim/platform_message.h">
      <type-tag size="I:11" alignment="I:1"><union-ref name="message_header" ref="0x4079e0ec"/>
        <typename><typedef-ref name="message_header_t" ref="0x4079e69c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0x406c0984" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0x406c037c"/>
        <typename><typedef-ref name="gain_entry_t" ref="0x406c0984"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0x40795aa8" loc="12:/home/jblock/tiny/tinyos-main//tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0x40795aa8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0x403bc010" loc="433:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0x403bc010"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0x40851878" loc="160:/home/jblock/tiny/tinyos-main//tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0x40851878"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0x402e1448" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0x402e1448"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0x40584e14" loc="358:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0x40584e14"/></typename>
      </type-function>
    </typedef>
    <typedef name="lspLink" ref="0x40a4f8b8" loc="34:Node.nc">
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="lspLink" ref="0x40a4f22c"/>
        <typename><typedef-ref name="lspLink" ref="0x40a4f8b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint8_t" ref="0x402dbe6c" loc="48:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0x402dbe6c"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0x4041529c" loc="75:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="time_t" ref="0x4041529c"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0x403bea30" loc="441:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0x403bea30"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0x404012a0" loc="121:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0x40401084"/>
        <typename><typedef-ref name="lldiv_t" ref="0x404012a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0x40588264" loc="315:/usr/include/libio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/>
        <typename><typedef-ref name="_IO_FILE" ref="0x40588264"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0x40426744" loc="69:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:36" alignment="I:4"><union-ref name="pthread_attr_t" ref="0x404260fc"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0x40426744"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0x405848e8" loc="355:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0x403f4274"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0x405848e8"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0x40417224" loc="98:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0x40417224"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0x404157bc" loc="103:/usr/include/time.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0x404157bc"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0x4042f3a0" loc="219:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:4"><union-ref ref="0x4042f184"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0x4042f3a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0x40b37e04" loc="112:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0x40b37e04"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0x403f2818" loc="47:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0x403f2818"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0x403f6010" loc="124:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0x403f6010"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0x403c134c" loc="443:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0x403c134c"/></typename>
      </type-int>
    </typedef>
    <typedef name="pack" ref="0x407e9e20" loc="26:includes/packet.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0x407e91b0"/>
        <typename><typedef-ref name="pack" ref="0x407e9e20"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0x40590010" loc="79:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x40119f04"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0x40590010"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="sendInfo" ref="0x40a4f010" loc="16:includes/sendInfo.h">
      <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0x40a509bc"/>
        <typename><typedef-ref name="sendInfo" ref="0x40a4f010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__off_t" ref="0x403f4010" loc="131:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__off_t" ref="0x403f4010"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0x402e1b78" loc="90:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0x402e1b78"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0x403f86f4" loc="158:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blkcnt_t" ref="0x403f86f4"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0x40791f08" loc="36:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0x40793c34"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0x40791f08"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__syscall_ulong_t" ref="0x403fcd50" loc="177:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__syscall_ulong_t" ref="0x403fcd50"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0x40795618" loc="10:/home/jblock/tiny/tinyos-main//tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0x40795618"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0x402e4254" loc="138:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0x402e4254"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0x40b4a010" loc="241:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b4bdc4"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x40b4a010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0x40b36110" loc="114:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b37244"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0x40b36110"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0x407a0eb0" loc="138:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0x407a0b18"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0x407a0eb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0x403f8bf0" loc="162:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0x403f8bf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0x402e00b8" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0x402e00b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0x40578b7c" loc="25:/usr/include/_G_config.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0x40578960"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0x40578b7c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0x4041a280" loc="200:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0x4041a280"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0x40b480fc" loc="270:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0x40b480fc"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0x40b4517c" loc="287:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0x40b4517c"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0x4079516c" loc="7:/home/jblock/tiny/tinyos-main//tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0x4079516c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0x403f824c" loc="150:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0x403f824c"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0x4079d2bc" loc="61:/home/jblock/tiny/tinyos-main//tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_metadata" ref="0x4079ee98"/>
        <typename><typedef-ref name="message_metadata_t" ref="0x4079d2bc"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0x40584010" loc="346:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0x403fc81c"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0x401253cc"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0x40584010"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0x4041b874" loc="82:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fd_mask" ref="0x4041b874"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0x403be17c" loc="437:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0x403be17c"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0x405e9340" loc="10:/home/jblock/tiny/tinyos-main//tos/lib/tossim/hashtable.h">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0x405e90e8"/>
        <typename><typedef-ref name="hashtable_t" ref="0x405e9340"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0x4041253c" loc="60:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0x4041253c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0x403f2cd8" loc="56:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0x403f2cd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0x4041a8e8" loc="202:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0x4041a8e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0x40422c00" loc="243:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsfilcnt_t" ref="0x40422c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0x402e34c8" loc="103:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0x402e34c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0x403f0c94" loc="55:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x403f06d8"/>
        <typename><typedef-ref name="idtype_t" ref="0x403f0c94"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__rlim64_t" ref="0x403f9044" loc="137:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0x403f9044"/></typename>
      </type-int>
    </typedef>
    <typedef name="snr_lqi_t" ref="0x40966184" loc="13:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="snr_lqi" ref="0x40969b70"/>
        <typename><typedef-ref name="snr_lqi_t" ref="0x40966184"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__key_t" ref="0x403f9d24" loc="144:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0x403f9d24"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0x403f96c4" loc="140:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0x403f96c4"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0x40b356a0" loc="130:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b35484"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0x40b356a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0x40b46ef0" loc="286:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0x40b46ef0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0x4058562c" loc="338:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0x403fc81c"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0x401253cc"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0x4058562c"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0x403bdb70" loc="432:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0x403bdb70"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0x402e4890" loc="34:/usr/include/inttypes.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0x402e4890"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0x40b458e4" loc="292:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0x40b458e4"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0x40419010" loc="205:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="register_t" ref="0x40419010"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_header_t" ref="0x40856244" loc="78:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="73:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x4085728c"/>
        <typename><typedef-ref name="cc2420_header_t" ref="0x40856244"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0x4042d3a8" loc="240:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x4042d18c"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0x4042d3a8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0x40b422f0" loc="309:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b420d4"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x40b422f0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0x40b37460" loc="108:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/home/jblock/tiny/tinyos-main//tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b37244"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40b37460"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0x40417664" loc="109:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ssize_t" ref="0x40417664"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0x403f2a68" loc="55:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0x403f2a68"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0x402dba1c" loc="38:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0x402dba1c"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0x402e0510" loc="58:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0x402e0510"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0x4041381c" loc="36:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_long" ref="0x4041381c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0x40838a1c" loc="94:/home/jblock/tiny/tinyos-main//tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0x40838a1c"/></typename>
      </type-int>
    </typedef>
    <typedef name="socket_t" ref="0x40a81800" loc="69:lib/interfaces/../../includes/socket.h">
      <type-tag size="I:404" alignment="I:2"><struct-ref name="socket_t" ref="0x40a8455c"/>
        <typename><typedef-ref name="socket_t" ref="0x40a81800"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0x4055be40" loc="308:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0x4055b404"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0x4055be40"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0x403c17b0" loc="444:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0x403c17b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0x403bee94" loc="442:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0x403bee94"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0x40422e6c" loc="60:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_t" ref="0x40422e6c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0x403f849c" loc="153:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blksize_t" ref="0x403f849c"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0x402e7010" loc="284:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0x402e4da4"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0x402e7010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0x403f6d3c" loc="130:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__nlink_t" ref="0x403f6d3c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__id_t" ref="0x403f9254" loc="138:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0x403f9254"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0x40b2d458" loc="205:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b2eea4"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0x40b2d458"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least32_t" ref="0x402e168c" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0x402e168c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0x4057850c" loc="94:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x405782f0"/>
        <typename><typedef-ref name="__mbstate_t" ref="0x4057850c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0x4079ec80" loc="57:/home/jblock/tiny/tinyos-main//tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0x4079e8a0"/>
        <typename><typedef-ref name="message_footer_t" ref="0x4079ec80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0x40b46c78" loc="285:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0x40b46c78"/></typename>
      </type-int>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0x40402158" loc="71:/usr/include/stdlib.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x403fdda0"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0x40402158"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0x403f8978" loc="159:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0x403f8978"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0x40422984" loc="239:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsblkcnt_t" ref="0x40422984"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0x40417010" loc="86:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="off_t" ref="0x40417010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0x403ee270" loc="31:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0x403ee270"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0x403bc444" loc="434:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0x403bc444"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0x40413a48" loc="37:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0x40413a48"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0x403f9918" loc="141:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__suseconds_t" ref="0x403f9918"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0x4042fccc" loc="234:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:20" alignment="I:4"><union-ref ref="0x4042fab0"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0x4042fccc"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0x40b49574" loc="259:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b49358"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x40b49574"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0x403ee8a8" loc="36:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0x403ee8a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0x4057722c" loc="30:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0x40577010"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0x4057722c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0x403f8010" loc="147:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0x403f8010"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0x402e3700" loc="109:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast16_t" ref="0x402e3700"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_footer_t" ref="0x40856690" loc="84:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="80:/home/jblock/tiny/tinyos-main//tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet Footer&#10;</short>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><nx_struct-ref name="cc2420_footer_t" ref="0x4085648c"/>
        <typename><typedef-ref name="cc2420_footer_t" ref="0x40856690"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0x40b46a00" loc="284:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0x40b46a00"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0x402e44c8" loc="140:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0x402e44c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0x407953f0" loc="8:/home/jblock/tiny/tinyos-main//tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0x407953f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0x403f4b68" loc="135:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clock_t" ref="0x403f4b68"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0x403bccd4" loc="436:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0x403bccd4"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0x403f4da8" loc="136:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__rlim_t" ref="0x403f4da8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0x40413c9c" loc="38:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0x40413c9c"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0x402e3010" loc="97:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0x402e3010"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0x402e09b4" loc="66:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0x402e09b4"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0x40402c5c" loc="109:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0x40402a40"/>
        <typename><typedef-ref name="ldiv_t" ref="0x40402c5c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0x4041ac1c" loc="203:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0x4041ac1c"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0x4041a5b4" loc="201:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0x4041a5b4"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0x40b313b8" loc="163:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b3119c"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40b313b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0x40b2d78c" loc="208:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b2eea4"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0x40b2d78c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0x402e1918" loc="83:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0x402e1918"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0x403f2144" loc="40:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0x403f2144"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0x4042bcc4" loc="213:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:4"><union-ref ref="0x4042ba48"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0x4042bcc4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0x4046ff24" loc="37:/usr/include/i386-linux-gnu/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="double_t" ref="0x4046ff24"/></typename>
      </type-float>
    </typedef>
    <typedef name="lqi_dist_t" ref="0x409698f4" loc="7:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_lqi.h">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0x409694a8"/>
        <typename><typedef-ref name="lqi_dist_t" ref="0x409698f4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fd_mask" ref="0x4041dd4c" loc="54:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fd_mask" ref="0x4041dd4c"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0x405d9e4c" loc="65:/home/jblock/tiny/tinyos-main//tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0x405d9e4c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0x403f8e9c" loc="163:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0x403f8e9c"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0x4067747c" loc="71:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:480" alignment="I:4"><struct-ref name="sim_noise_hash_t" ref="0x406788b0"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0x4067747c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0x4057a8e0" loc="64:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0x4057a428"/>
        <typename><typedef-ref name="__FILE" ref="0x4057a8e0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0x40577570" loc="40:/usr/lib/gcc/i686-linux-gnu/4.8/include/stdarg.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0x40119f04"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0x40577570"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0x403c1c14" loc="445:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0x403c1c14"/></typename>
      </type-int>
    </typedef>
    <typedef name="tcp_pack" ref="0x40d73124" loc="29:lib/modules/../../includes/TCPPacket.h">
      <type-tag size="I:19" alignment="I:1"><nx_struct-ref name="tcp_pack" ref="0x40d740b0"/>
        <typename><typedef-ref name="tcp_pack" ref="0x40d73124"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__off64_t" ref="0x403f4274" loc="132:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0x403f4274"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0x40b45b54" loc="293:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0x40b45b54"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0x403fc3e0" loc="167:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0x403fc3e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0x40b46788" loc="283:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0x40b46788"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0x40b453f4" loc="288:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0x40b453f4"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0x402dbc44" loc="43:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0x402dbc44"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0x402db83c" loc="37:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0x402db83c"/></typename>
      </type-int>
    </typedef>
    <typedef name="ulong" ref="0x40415b30" loc="150:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ulong" ref="0x40415b30"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0x402e326c" loc="99:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0x402e326c"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0x40412dcc" loc="80:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0x40412dcc"/></typename>
      </type-int>
    </typedef>
    <typedef name="__syscall_slong_t" ref="0x403fcaa8" loc="175:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__syscall_slong_t" ref="0x403fcaa8"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0x4079c1e4" loc="19:/home/jblock/tiny/tinyos-main//tos/types/message.h">
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4079d48c"/>
        <typename><typedef-ref name="message_t" ref="0x4079c1e4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0x403be5d8" loc="438:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0x403be5d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0x40b34d24" loc="146:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b34b08"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x40b34d24"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0x40412114" loc="44:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0x40412114"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0x403fb8e4" loc="189:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0x403fb8e4"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0x40631990" loc="65:/home/jblock/tiny/tinyos-main//tos/lib/tossim/heap.c">
      <type-tag size="I:12" alignment="I:4"><struct-ref name="node" ref="0x40631554"/>
        <typename><typedef-ref name="node_t" ref="0x40631990"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0x403f6228" loc="125:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0x403f6228"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0x403bd73c" loc="431:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0x403bd73c"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0x40676a98" loc="84:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_noise.h">
      <type-tag size="I:184" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0x40677754"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0x40676a98"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0x40417428" loc="104:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0x40417428"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0x40424870" loc="127:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:24" alignment="I:4"><union-ref ref="0x404245f4"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0x40424870"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0x4066f488" loc="120:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0x4066f488"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0x40427564" loc="153:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:4"><union-ref ref="0x404272e8"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0x40427564"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0x40427e3c" loc="163:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0x40427e3c"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0x40412328" loc="48:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ino_t" ref="0x40412328"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0x404178a0" loc="115:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0x404178a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0x4066364c" loc="61:/usr/include/i386-linux-gnu/sys/time.h">
      <documentation loc="32:/home/jblock/tiny/tinyos-main//tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0x4066364c"/></typename>
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0x40663010"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0x403c353c" loc="447:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0x403c353c"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0x40417cf0" loc="122:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0x40417cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0x40424f08" loc="133:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0x40424cec"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0x40424f08"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_slist_t" ref="0x40426e4c" loc="84:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0x404269bc"/>
        <typename><typedef-ref name="__pthread_slist_t" ref="0x40426e4c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0x407901b0" loc="83:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
      <documentation loc="71:/home/jblock/tiny/tinyos-main//tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0x407901b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0x40b2d124" loc="202:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40b2eea4"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40b2d124"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0x40b46288" loc="279:/home/jblock/tiny/tinyos-main//tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0x40b46288"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0x40928c60" loc="96:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0x40928304" loc="101:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0x408d29d8" loc="145:/home/jblock/tiny/tinyos-main//tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0x409b23c4" loc="67:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:52" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0x409b20f4"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0x409b23c4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_read_rssi_task" ref="0x40a41bfc" loc="528:/home/jblock/tiny/tinyos-main//tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendBufferTask" ref="0x40af512c" loc="74:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0x40b1ccbc" loc="74:/home/jblock/tiny/tinyos-main//tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0x40c41818" loc="71:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0x40c5f508" loc="66:/home/jblock/tiny/tinyos-main//tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0x40c5f1cc"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0x40c5f508"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0x40ca4ed8" loc="57:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:4" alignment="I:4"><struct-ref scoped="" ref="0x40ca4d1c"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0x40ca4ed8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0x40ca893c" loc="169:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0x40cce220" loc="126:/home/jblock/tiny/tinyos-main//tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_processCommand" ref="0x40d08648" loc="22:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-array elements="I:9" size="I:36" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="hashmapEntry" ref="0x40d6ed30" loc="23:dataStructures/modules/HashmapC.nc">
      <component-ref qname="HashmapC"/>
      <type-tag size="U:" alignment="U:"><struct-ref name="hashmapEntry" scoped="" ref="0x40d6e8a4"/>
        <typename><typedef-ref name="hashmapEntry" scoped="" ref="0x40d6ed30"/></typename>
      </type-tag>
    </typedef>
  </typedefs>
</nesc>
